{"version":3,"file":"9723.8f989c6dcedeb77d54af.js","mappings":"+vBAgBA,MAAMA,EAAaC,IAAAA,IAAAA,WAAU,CAAAC,YAAA,cAAVD,CAAU,4GAQvBE,EAAgBF,IAAAA,IAAAA,WAAU,CAAAC,YAAA,iBAAVD,CAAU,qDAkBjB,MAAMG,UAAiBC,IAAAA,cAA2BC,WAAAA,GAAA,SAAAC,WAAAC,EAAA,qCAC7BC,IAC5BA,EAAMC,kBACN,MAAMC,EAA6B,CAC/BC,QAASC,EAAAA,GAAAA,cACTC,WAAYC,EAAAA,GAEhBC,KAAKC,MAAMC,QAAQC,UAAUR,EAA2B,GAC3D,CAEDS,MAAAA,GACI,IAAKJ,KAAKC,MAAMI,cAAgBL,KAAKC,MAAMK,OACvC,OAAO,KAGX,IAAIC,EACAlB,IAAAA,cAAA,MACImB,GAAG,iBACHC,UAAU,aACV,cAAaT,KAAKC,MAAMK,QAEvBN,KAAKC,MAAMS,iBAgBpB,OAZIV,KAAKC,MAAMU,kBACXJ,EACIlB,IAAAA,cAACuB,EAAAA,EAAW,CACRJ,GAAG,qBACHK,UAAU,SACVC,MAAOd,KAAKC,MAAMU,iBAEjBJ,IAMTlB,IAAAA,cAAA,OACIoB,UAAU,8BACVD,GAAG,+BAEHnB,IAAAA,cAACL,EAAU,CACPwB,GAAG,aACHC,UAAU,gBAEVpB,IAAAA,cAACF,EAAa,KACToB,EACDlB,IAAAA,cAAA,OACImB,GAAG,oBACHC,UAAU,yBAEVpB,IAAAA,cAAA,OACImB,GAAG,iBACHC,UAAU,cAET,IAAMT,KAAKC,MAAMI,YAAYU,UAElC1B,IAAAA,cAAC2B,EAAAA,EAAiB,CACdC,aAAa,EACbC,iBAAiB,SACjBC,WAAY,CACRC,cAAe,MACfC,WAAY,GAEhBC,QAAStB,KAAKuB,kCAO1C,EACH/B,EAzEoBJ,EAAQ,aAXzBuB,gBAAea,IAAAA,OACflB,OAAMkB,IAAAA,OAENd,gBAAec,IAAAA,OACftB,QAAOsB,IAAAA,MAAA,CAIPrB,UAASqB,IAAAA,KAAAA,aAAAC,aCHb,SAAeC,EAAAA,EAAAA,UApBf,SAAyBC,GACrB,MAAMC,GAAcC,EAAAA,EAAAA,IAAeF,GAGnC,MAAO,CACHtB,aAHgByB,EAAAA,EAAAA,IAAeH,GAI/BhB,gBAAiBiB,aAAW,EAAXA,EAAaG,YAC9BrB,gBAAiBkB,aAAW,EAAXA,EAAaI,aAC9B1B,OAAQsB,aAAW,EAAXA,EAAapB,GAE7B,IAEA,SAA4ByB,GACxB,MAAO,CACH/B,SAASgC,EAAAA,EAAAA,oBAAmB,CACxB/B,UAASA,EAAAA,GACV8B,GAEX,GAEA,CAA4D7C,GChC5D,ECIe,WACX,MACM+C,GADOC,EAAAA,EAAAA,WACUC,cAAc,CAAC7B,GAAI,mCAAoC8B,eAAgB,qBAE9F,OACIjD,IAAAA,cAAA,OACImB,GAAG,YACH,aAAY2B,EACZI,UAAW,EACXC,KAAK,cACL/B,UAAU,gDACV,uBAAqB,KAErBpB,IAAAA,cAAA,OACIoB,UAAU,UAEVpB,IAAAA,cAACD,EAAQ,OAIzB,C","sources":["webpack://mattermost-webapp/./src/components/sidebar/mobile_sidebar_header/contents/contents.tsx","webpack://mattermost-webapp/./src/components/sidebar/mobile_sidebar_header/contents/index.ts","webpack://mattermost-webapp/./src/components/sidebar/mobile_sidebar_header/index.ts","webpack://mattermost-webapp/./src/components/sidebar/mobile_sidebar_header/mobile_sidebar_header.tsx"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport type {UserProfile} from '@mattermost/types/users';\n\nimport CustomStatusEmoji from 'components/custom_status/custom_status_emoji';\nimport CustomStatusModal from 'components/custom_status/custom_status_modal';\nimport WithTooltip from 'components/with_tooltip';\n\nimport {ModalIdentifiers} from 'utils/constants';\n\nimport type {ModalData} from 'types/actions';\n\nconst HeaderLine = styled.div`\n    display: flex;\n    padding: 2px 16px 0 0;\n    flex-grow: 1;\n    user-select: none;\n    color: var(--sidebar-header-text-color);\n`;\n\nconst VerticalStack = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n`;\n\ntype Props = {\n    teamDescription?: string;\n    teamId?: string;\n    currentUser: UserProfile;\n    teamDisplayName?: string;\n    actions: Actions;\n};\n\ntype Actions = {\n    openModal: <P>(modalData: ModalData<P>) => void;\n};\n\nexport default class Contents extends React.PureComponent<Props> {\n    handleCustomStatusEmojiClick = (event: React.MouseEvent) => {\n        event.stopPropagation();\n        const customStatusInputModalData = {\n            modalId: ModalIdentifiers.CUSTOM_STATUS,\n            dialogType: CustomStatusModal,\n        };\n        this.props.actions.openModal(customStatusInputModalData);\n    };\n\n    render() {\n        if (!this.props.currentUser || !this.props.teamId) {\n            return null;\n        }\n\n        let teamNameWithToolTip = (\n            <h1\n                id='headerTeamName'\n                className='team__name'\n                data-teamid={this.props.teamId}\n            >\n                {this.props.teamDisplayName}\n            </h1>\n        );\n\n        if (this.props.teamDescription) {\n            teamNameWithToolTip = (\n                <WithTooltip\n                    id='team-name__tooltip'\n                    placement='bottom'\n                    title={this.props.teamDescription}\n                >\n                    {teamNameWithToolTip}\n                </WithTooltip>\n            );\n        }\n\n        return (\n            <div\n                className='SidebarHeaderDropdownButton'\n                id='sidebarHeaderDropdownButton'\n            >\n                <HeaderLine\n                    id='headerInfo'\n                    className='header__info'\n                >\n                    <VerticalStack>\n                        {teamNameWithToolTip}\n                        <div\n                            id='headerInfoContent'\n                            className='header__info__content'\n                        >\n                            <div\n                                id='headerUsername'\n                                className='user__name'\n                            >\n                                {'@' + this.props.currentUser.username}\n                            </div>\n                            <CustomStatusEmoji\n                                showTooltip={true}\n                                tooltipDirection='bottom'\n                                emojiStyle={{\n                                    verticalAlign: 'top',\n                                    marginLeft: 2,\n                                }}\n                                onClick={this.handleCustomStatusEmojiClick as unknown as () => void}\n                            />\n                        </div>\n                    </VerticalStack>\n                </HeaderLine>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport type {Dispatch} from 'redux';\n\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\n\nimport {openModal} from 'actions/views/modals';\n\nimport type {GlobalState} from 'types/store';\n\nimport Contents from './contents';\n\nfunction mapStateToProps(state: GlobalState) {\n    const currentTeam = getCurrentTeam(state);\n    const currentUser = getCurrentUser(state);\n\n    return {\n        currentUser,\n        teamDescription: currentTeam?.description,\n        teamDisplayName: currentTeam?.display_name,\n        teamId: currentTeam?.id,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators({\n            openModal,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contents);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport MobileSidebarHeader from './mobile_sidebar_header';\nexport default MobileSidebarHeader;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\n\nimport Contents from './contents';\n\nexport default function MobileSidebarHeader() {\n    const intl = useIntl();\n    const ariaLabel = intl.formatMessage({id: 'accessibility.sections.lhsHeader', defaultMessage: 'team menu region'});\n\n    return (\n        <div\n            id='lhsHeader'\n            aria-label={ariaLabel}\n            tabIndex={-1}\n            role='application'\n            className='SidebarHeader team__header theme a11y__region'\n            data-a11y-sort-order='5'\n        >\n            <div\n                className='d-flex'\n            >\n                <Contents/>\n            </div>\n        </div>\n    );\n}\n"],"names":["HeaderLine","styled","displayName","VerticalStack","Contents","React","constructor","arguments","_defineProperty","event","stopPropagation","customStatusInputModalData","modalId","ModalIdentifiers","dialogType","CustomStatusModal","this","props","actions","openModal","render","currentUser","teamId","teamNameWithToolTip","id","className","teamDisplayName","teamDescription","WithTooltip","placement","title","username","CustomStatusEmoji","showTooltip","tooltipDirection","emojiStyle","verticalAlign","marginLeft","onClick","handleCustomStatusEmojiClick","_pt","isRequired","connect","state","currentTeam","getCurrentTeam","getCurrentUser","description","display_name","dispatch","bindActionCreators","ariaLabel","useIntl","formatMessage","defaultMessage","tabIndex","role"],"sourceRoot":""}