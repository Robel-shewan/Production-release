{"version":3,"file":"1504.6c399cfb94470d58d43a.js","mappings":"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","sources":["webpack://mattermost-webapp/./src/actions/views/login.ts","webpack://mattermost-webapp/./src/components/desktop_auth_token.tsx","webpack://mattermost-webapp/./src/components/external_login_button/external_login_button.tsx","webpack://mattermost-webapp/./src/components/header_footer_route/content_layouts/alternate_link.tsx","webpack://mattermost-webapp/./src/components/header_footer_route/content_layouts/column.tsx","webpack://mattermost-webapp/./src/components/login/typing_animation.tsx","webpack://mattermost-webapp/./src/components/widgets/icons/lock_icon.tsx","webpack://mattermost-webapp/./src/components/widgets/icons/login_gitlab_icon.tsx","webpack://mattermost-webapp/./src/components/widgets/icons/login_google_icon.tsx","webpack://mattermost-webapp/./src/components/widgets/icons/login_office_365_icon.tsx","webpack://mattermost-webapp/./src/components/widgets/icons/login_openid_icon.tsx","webpack://mattermost-webapp/./src/components/widgets/inputs/password_input/password_input.tsx"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {batchActions} from 'redux-batched-actions';\n\nimport type {ServerError} from '@mattermost/types/errors';\n\nimport {UserTypes} from 'mattermost-redux/action_types';\nimport {logError} from 'mattermost-redux/actions/errors';\nimport {loadRolesIfNeeded} from 'mattermost-redux/actions/roles';\nimport {Client4} from 'mattermost-redux/client';\nimport type {ActionFuncAsync} from 'mattermost-redux/types/actions';\n\nexport function login(loginId: string, password: string, mfaToken = ''): ActionFuncAsync {\n    return async (dispatch) => {\n        dispatch({type: UserTypes.LOGIN_REQUEST, data: null});\n\n        try {\n            // This is partial user profile we recieved when we login. We still need to make getMe for complete user profile.\n            const loggedInUserProfile = await Client4.login(loginId, password, mfaToken);\n\n            dispatch(\n                batchActions([\n                    {\n                        type: UserTypes.LOGIN_SUCCESS,\n                    },\n                    {\n                        type: UserTypes.RECEIVED_ME,\n                        data: loggedInUserProfile,\n                    },\n                ]),\n            );\n\n            dispatch(loadRolesIfNeeded(loggedInUserProfile.roles.split(' ')));\n        } catch (error) {\n            dispatch({\n                type: UserTypes.LOGIN_FAILURE,\n                error,\n            });\n            dispatch(logError(error as ServerError));\n            return {error};\n        }\n\n        return {data: true};\n    };\n}\n\nexport function loginWithDesktopToken(token: string): ActionFuncAsync {\n    return async (dispatch) => {\n        dispatch({type: UserTypes.LOGIN_REQUEST, data: null});\n\n        try {\n            // This is partial user profile we recieved when we login. We still need to make getMe for complete user profile.\n            const loggedInUserProfile = await Client4.loginWithDesktopToken(token);\n\n            dispatch(\n                batchActions([\n                    {\n                        type: UserTypes.LOGIN_SUCCESS,\n                    },\n                    {\n                        type: UserTypes.RECEIVED_ME,\n                        data: loggedInUserProfile,\n                    },\n                ]),\n            );\n\n            dispatch(loadRolesIfNeeded(loggedInUserProfile.roles.split(' ')));\n        } catch (error) {\n            dispatch({\n                type: UserTypes.LOGIN_FAILURE,\n                error,\n            });\n            dispatch(logError(error as ServerError));\n            return {error};\n        }\n\n        return {data: true};\n    };\n}\n\nexport function loginById(id: string, password: string): ActionFuncAsync {\n    return async (dispatch) => {\n        dispatch({type: UserTypes.LOGIN_REQUEST, data: null});\n\n        try {\n            const loggedInUserProfile = await Client4.loginById(id, password, '');\n\n            dispatch(\n                batchActions([\n                    {\n                        type: UserTypes.LOGIN_SUCCESS,\n                    },\n                    {\n                        type: UserTypes.RECEIVED_ME,\n                        data: loggedInUserProfile,\n                    },\n                ]),\n            );\n\n            dispatch(loadRolesIfNeeded(loggedInUserProfile.roles.split(' ')));\n        } catch (error) {\n            dispatch({\n                type: UserTypes.LOGIN_FAILURE,\n                error,\n            });\n            dispatch(logError(error as ServerError));\n            return {error};\n        }\n\n        return {data: true};\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport classNames from 'classnames';\nimport crypto from 'crypto';\nimport React, {useEffect, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {useDispatch} from 'react-redux';\nimport {useHistory, useLocation} from 'react-router-dom';\n\nimport {loginWithDesktopToken} from 'actions/views/login';\n\nimport DesktopApp from 'utils/desktop_api';\n\nimport './desktop_auth_token.scss';\n\nconst BOTTOM_MESSAGE_TIMEOUT = 10000;\nconst DESKTOP_AUTH_PREFIX = 'desktop_auth_client_token';\n\nenum DesktopAuthStatus {\n    None,\n    WaitingForBrowser,\n    LoggedIn,\n    Authenticating,\n    Error,\n}\n\ntype Props = {\n    href: string;\n    onLogin: () => void;\n}\n\nconst DesktopAuthToken: React.FC<Props> = ({href, onLogin}: Props) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const {search} = useLocation();\n    const query = new URLSearchParams(search);\n\n    const serverToken = query.get('server_token');\n    const receivedClientToken = query.get('client_token');\n    const storedClientToken = sessionStorage.getItem(DESKTOP_AUTH_PREFIX);\n    const [status, setStatus] = useState(serverToken ? DesktopAuthStatus.LoggedIn : DesktopAuthStatus.None);\n    const [showBottomMessage, setShowBottomMessage] = useState<boolean>();\n\n    const tryDesktopLogin = async () => {\n        if (!(serverToken && receivedClientToken === storedClientToken)) {\n            setStatus(DesktopAuthStatus.Error);\n            return;\n        }\n\n        sessionStorage.removeItem(DESKTOP_AUTH_PREFIX);\n        const {error: loginError} = await dispatch(loginWithDesktopToken(serverToken));\n\n        if (loginError && loginError.server_error_id && loginError.server_error_id.length !== 0) {\n            setStatus(DesktopAuthStatus.Error);\n            return;\n        }\n\n        setStatus(DesktopAuthStatus.LoggedIn);\n        await onLogin();\n    };\n\n    const openExternalLoginURL = async () => {\n        const desktopToken = `${DesktopApp.isDev() ? 'dev-' : ''}${crypto.randomBytes(32).toString('hex')}`.slice(0, 64);\n        sessionStorage.setItem(DESKTOP_AUTH_PREFIX, desktopToken);\n        const parsedURL = new URL(href);\n\n        const params = new URLSearchParams(parsedURL.searchParams);\n        params.set('desktop_token', desktopToken);\n\n        window.open(`${parsedURL.origin}${parsedURL.pathname}?${params.toString()}`);\n        setStatus(DesktopAuthStatus.WaitingForBrowser);\n    };\n\n    const forwardToDesktopApp = () => {\n        const url = new URL(window.location.href);\n        let protocol = 'mattermost';\n        if (url.searchParams.get('isDesktopDev')) {\n            protocol = 'mattermost-dev';\n        }\n\n        window.location.href = url.toString().replace(url.protocol, `${protocol}:`);\n    };\n\n    useEffect(() => {\n        setShowBottomMessage(false);\n\n        const timeout = setTimeout(() => {\n            setShowBottomMessage(true);\n        }, BOTTOM_MESSAGE_TIMEOUT) as unknown as number;\n\n        return () => {\n            clearTimeout(timeout);\n        };\n    }, [status]);\n\n    useEffect(() => {\n        if (serverToken) {\n            if (storedClientToken) {\n                tryDesktopLogin();\n            } else {\n                forwardToDesktopApp();\n            }\n            return;\n        }\n\n        openExternalLoginURL();\n    }, [serverToken]);\n\n    let mainMessage;\n    let subMessage;\n    let bottomMessage;\n\n    if (status === DesktopAuthStatus.WaitingForBrowser) {\n        mainMessage = (\n            <FormattedMessage\n                id='desktop_auth_token.polling.redirectingToBrowser'\n                defaultMessage='Redirecting to browser...'\n            />\n        );\n        subMessage = (\n            <FormattedMessage\n                id='desktop_auth_token.polling.awaitingToken'\n                defaultMessage='Authenticating in the browser, awaiting valid token.'\n            />\n        );\n\n        bottomMessage = null;\n    }\n\n    if (status === DesktopAuthStatus.LoggedIn) {\n        mainMessage = (\n            <FormattedMessage\n                id='desktop_auth_token.complete.youAreNowLoggedIn'\n                defaultMessage='You are now logged in'\n            />\n        );\n        subMessage = (\n            <FormattedMessage\n                id='desktop_auth_token.complete.openMattermost'\n                defaultMessage='Click on <b>Open Mattermost</b> in the browser prompt to <a>launch the desktop app</a>'\n                values={{\n                    a: (chunks: React.ReactNode) => {\n                        return (\n                            <a onClick={forwardToDesktopApp}>\n                                {chunks}\n                            </a>\n                        );\n                    },\n                    b: (chunks: React.ReactNode) => (<b>{chunks}</b>),\n                }}\n            />\n        );\n\n        bottomMessage = (\n            <FormattedMessage\n                id='desktop_auth_token.complete.havingTrouble'\n                defaultMessage='Having trouble logging in? <a>Open Mattermost in your browser</a>'\n                values={{\n                    a: (chunks: React.ReactNode) => {\n                        return (\n                            <a onClick={() => history.push('/')}>\n                                {chunks}\n                            </a>\n                        );\n                    },\n                }}\n            />\n        );\n    }\n\n    if (status === DesktopAuthStatus.Error) {\n        mainMessage = (\n            <FormattedMessage\n                id='desktop_auth_token.error.somethingWentWrong'\n                defaultMessage='Something went wrong'\n            />\n        );\n        subMessage = (\n            <FormattedMessage\n                id='desktop_auth_token.error.restartFlow'\n                defaultMessage={'Click <a>here</a> to try again.'}\n                values={{\n                    a: (chunks: React.ReactNode) => {\n                        return (\n                            <a onClick={() => history.push('/')}>\n                                {chunks}\n                            </a>\n                        );\n                    },\n                }}\n            />\n        );\n        bottomMessage = null;\n    }\n\n    return (\n        <div className='DesktopAuthToken'>\n            <h1 className='DesktopAuthToken__main'>\n                {mainMessage}\n            </h1>\n            <p className={classNames('DesktopAuthToken__sub', {complete: status === DesktopAuthStatus.LoggedIn})}>\n                {subMessage}\n            </p>\n            <div className='DesktopAuthToken__bottom'>\n                {showBottomMessage ? bottomMessage : null}\n            </div>\n        </div>\n    );\n};\n\nexport default DesktopAuthToken;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport './external_login_button.scss';\n\nexport type ExternalLoginButtonType = {\n    id: string;\n    url: string;\n    icon: React.ReactNode;\n    label: string;\n    style?: React.CSSProperties;\n    direction?: 'row' | 'column';\n    onClick: (event: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst ExternalLoginButton = ({\n    id,\n    url,\n    icon,\n    label,\n    style,\n    direction = 'row',\n    onClick,\n}: ExternalLoginButtonType) => (\n    <a\n        id={id}\n        className={classNames('external-login-button', {'direction-column': direction === 'column'}, id)}\n        href={url}\n        style={style}\n        onClick={onClick}\n    >\n        {icon}\n        <span className='external-login-button-label'>\n            {label}\n        </span>\n    </a>\n);\n\nexport default ExternalLoginButton;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport './alternate_link.scss';\n\ntype AlternateLinkProps = {\n    className?: string;\n    onClick?: () => void;\n    alternateMessage?: string;\n    alternateLinkPath?: string;\n    alternateLinkLabel?: string;\n}\n\nconst AlternateLink = ({className, onClick = () => {}, alternateMessage, alternateLinkPath, alternateLinkLabel}: AlternateLinkProps) => {\n    if (!alternateMessage && !alternateLinkPath && !alternateLinkLabel) {\n        return null;\n    }\n\n    return (\n        <div\n            className={classNames('alternate-link', className)}\n            data-testid='alternate-link'\n        >\n            {alternateMessage && (\n                <span className='alternate-link__message'>\n                    {alternateMessage}\n                </span>\n            )}\n            {alternateLinkPath && alternateLinkLabel && (\n                <Link\n                    className='alternate-link__link'\n                    to={{\n                        pathname: alternateLinkPath,\n                        search: location.search,\n                    }}\n                    onClick={onClick}\n                >\n                    {alternateLinkLabel}\n                </Link>\n            )}\n        </div>\n    );\n};\n\nexport default AlternateLink;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {type ReactNode} from 'react';\n\nimport Constants from 'utils/constants';\n\nimport './column.scss';\n\ntype ColumnProps = {\n    title: ReactNode;\n    message: ReactNode;\n    SVGElement?: React.ReactNode;\n    extraContent?: React.ReactNode;\n    onEnterKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n}\n\nconst Column = ({title, message, SVGElement, extraContent, onEnterKeyDown}: ColumnProps) => {\n    const handleOnEnterKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (onEnterKeyDown && e.key === Constants.KeyCodes.ENTER[0]) {\n            onEnterKeyDown(e);\n        }\n    };\n\n    return (\n        <div\n            className='content-layout-column'\n            onKeyDown={handleOnEnterKeyDown}\n            tabIndex={0}\n        >\n            <div className='content-layout-column-svg'>\n                {SVGElement}\n            </div>\n            <h1 className='content-layout-column-title'>\n                {title}\n            </h1>\n            <p className='content-layout-column-message'>\n                {message}\n            </p>\n            {extraContent && (\n                <div className='content-layout-column-extra-content'>\n                    {extraContent}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Column;\n","import React, { useState, useEffect } from 'react';\nimport './login.scss';\n\ninterface TypingAnimationProps {\n    words: string[];\n    typingSpeed?: number;\n    pauseDuration?: number;\n}\n\nconst TypingAnimation: React.FC<TypingAnimationProps> = ({ words, typingSpeed = 150, pauseDuration = 1000 }) => {\n    const [displayedText, setDisplayedText] = useState('');\n    const [isDeleting, setIsDeleting] = useState(false);\n    const [wordIndex, setWordIndex] = useState(0);\n    const [charIndex, setCharIndex] = useState(0);\n\n    useEffect(() => {\n        const handleTyping = () => {\n            const currentWord = words[wordIndex];\n            if (isDeleting) {\n                if (charIndex > 0) {\n                    setDisplayedText(currentWord.substring(0, charIndex - 1));\n                    setCharIndex(charIndex - 1);\n                } else {\n                    setIsDeleting(false);\n                    setWordIndex((wordIndex + 1) % words.length);\n                }\n            } else {\n                if (charIndex < currentWord.length) {\n                    setDisplayedText(currentWord.substring(0, charIndex + 1));\n                    setCharIndex(charIndex + 1);\n                } else {\n                    setTimeout(() => setIsDeleting(true), pauseDuration);\n                }\n            }\n        };\n\n        const typingTimeout = setTimeout(handleTyping, typingSpeed);\n\n        return () => clearTimeout(typingTimeout);\n    }, [charIndex, isDeleting, wordIndex, words, typingSpeed, pauseDuration]);\n\n    return <span>{displayedText}<span className=\"cursor\">|</span></span>;\n};\n\nexport default TypingAnimation;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\n\nexport default function LockIcon(props: React.HTMLAttributes<HTMLSpanElement>) {\n    const {formatMessage} = useIntl();\n    return (\n        <span {...props}>\n            <svg\n                width='12px'\n                height='13px'\n                viewBox='0 0 13 15'\n                role='presentation'\n                aria-label={formatMessage({id: 'generic_icons.channel.private', defaultMessage: 'Private Channel Icon'})}\n            >\n                <g\n                    stroke='none'\n                    strokeWidth='1'\n                    fill='inherit'\n                    fillRule='evenodd'\n                >\n                    <g\n                        transform='translate(-116.000000, -175.000000)'\n                        fillRule='nonzero'\n                        fill='inherit'\n                    >\n                        <g transform='translate(95.000000, 0.000000)'>\n                            <g transform='translate(20.000000, 113.000000)'>\n                                <g transform='translate(1.000000, 62.000000)'>\n                                    <path d='M12.0714286,6.5 L11.1428571,6.5 L11.1428571,4.64285714 C11.1428571,2.07814286 9.06471429,0 6.5,0 C3.93528571,0 1.85714286,2.07814286 1.85714286,4.64285714 L1.85714286,6.5 L0.928571429,6.5 C0.415071429,6.5 0,7.00792857 0,7.52142857 L0,13.9285714 C0,14.4420714 0.415071429,14.8571429 0.928571429,14.8571429 L12.0714286,14.8571429 C12.5849286,14.8571429 13,14.4420714 13,13.9285714 L13,7.52142857 C13,7.00792857 12.5849286,6.5 12.0714286,6.5 Z M6.5,1.85714286 C8.03585714,1.85714286 9.28571429,3.107 9.28571429,4.64285714 L9.28571429,6.5 L8.35714286,6.5 L4.64285714,6.5 L3.71428571,6.5 L3.71428571,4.64285714 C3.71428571,3.107 4.96414286,1.85714286 6.5,1.85714286 Z'/>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </g>\n            </svg>\n        </span>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\n\nexport default function LoginGitlabIcon(props: React.HTMLAttributes<HTMLSpanElement>) {\n    const {formatMessage} = useIntl();\n\n    return (\n        <span {...props}>\n            <svg\n                width='17'\n                height='16'\n                viewBox='0 0 17 16'\n                fill='none'\n                xmlns='http://www.w3.org/2000/svg'\n                aria-label={formatMessage({id: 'generic_icons.login.gitlab', defaultMessage: 'Gitlab Icon'})}\n            >\n                <path\n                    fillRule='evenodd'\n                    clipRule='evenodd'\n                    d='M8.83325 15.4909L11.7793 6.45337H5.88745L8.83334 15.4909H8.83325Z'\n                    fill='#E24329'\n                />\n                <path\n                    fillRule='evenodd'\n                    clipRule='evenodd'\n                    d='M8.83339 15.4909L5.88737 6.45337H1.75854L8.83347 15.4908L8.83339 15.4909Z'\n                    fill='#FC6D26'\n                />\n                <path\n                    fillRule='evenodd'\n                    clipRule='evenodd'\n                    d='M1.75846 6.45329L0.863125 9.19966C0.781518 9.45021 0.870921 9.72467 1.08477 9.87941L8.83325 15.4908L1.75846 6.45325V6.45329Z'\n                    fill='#FCA326'\n                />\n                <path\n                    fillRule='evenodd'\n                    clipRule='evenodd'\n                    d='M1.75859 6.45333H5.88742L4.11296 1.01011C4.02169 0.73003 3.62418 0.73003 3.53296 1.01011L1.75854 6.45333H1.75859Z'\n                    fill='#E24329'\n                />\n                <path\n                    fillRule='evenodd'\n                    clipRule='evenodd'\n                    d='M8.83325 15.4909L11.7793 6.45337H15.9081L8.83334 15.4908L8.83325 15.4909Z'\n                    fill='#FC6D26'\n                />\n                <path\n                    fillRule='evenodd'\n                    clipRule='evenodd'\n                    d='M15.908 6.45329L16.8034 9.19966C16.885 9.45021 16.7956 9.72467 16.5817 9.87941L8.83325 15.4908L15.908 6.45325V6.45329Z'\n                    fill='#FCA326'\n                />\n                <path\n                    fillRule='evenodd'\n                    clipRule='evenodd'\n                    d='M15.9081 6.45333H11.7793L13.5538 1.01011C13.6451 0.73003 14.0426 0.73003 14.1338 1.01011L15.9082 6.45333H15.9081Z'\n                    fill='#E24329'\n                />\n            </svg>\n        </span>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\n\nexport default function LoginGoggleIcon(props: React.HTMLAttributes<HTMLSpanElement>) {\n    const {formatMessage} = useIntl();\n\n    return (\n        <span {...props}>\n            <svg\n                width='17'\n                height='16'\n                viewBox='0 0 17 16'\n                fill='none'\n                xmlns='http://www.w3.org/2000/svg'\n                aria-label={formatMessage({id: 'generic_icons.login.google', defaultMessage: 'Google Icon'})}\n            >\n                <path\n                    fillRule='evenodd'\n                    clipRule='evenodd'\n                    d='M15.5787 8.16364C15.5787 7.6531 15.5329 7.16219 15.4478 6.69092H8.66675V9.47601H12.5417C12.3747 10.376 11.8675 11.1386 11.1049 11.6491V13.4556H13.4318C14.7933 12.2022 15.5787 10.3564 15.5787 8.16364Z'\n                    fill='#4285F4'\n                />\n                <path\n                    fillRule='evenodd'\n                    clipRule='evenodd'\n                    d='M8.66685 15.2C10.6108 15.2 12.2407 14.5553 13.4319 13.4557L11.105 11.6491C10.4603 12.0811 9.63558 12.3364 8.66685 12.3364C6.79158 12.3364 5.2043 11.0699 4.63812 9.36804H2.23267V11.2335C3.41739 13.5866 5.8523 15.2 8.66685 15.2Z'\n                    fill='#34A853'\n                />\n                <path\n                    fillRule='evenodd'\n                    clipRule='evenodd'\n                    d='M4.63807 9.36806C4.49407 8.93606 4.41225 8.4746 4.41225 8.00006C4.41225 7.52551 4.49407 7.06406 4.63807 6.63206V4.7666H2.23261C1.74498 5.7386 1.4668 6.83824 1.4668 8.00006C1.4668 9.16187 1.74498 10.2615 2.23261 11.2335L4.63807 9.36806Z'\n                    fill='#FBBC05'\n                />\n                <path\n                    fillRule='evenodd'\n                    clipRule='evenodd'\n                    d='M8.66685 3.66369C9.72394 3.66369 10.673 4.02696 11.4192 4.74041L13.4843 2.67532C12.2374 1.5135 10.6076 0.800049 8.66685 0.800049C5.8523 0.800049 3.41739 2.4135 2.23267 4.76659L4.63812 6.63205C5.2043 4.93023 6.79158 3.66369 8.66685 3.66369Z'\n                    fill='#EA4335'\n                />\n            </svg>\n        </span>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\n\nexport default function LoginOffice365Icon(props: React.HTMLAttributes<HTMLSpanElement>) {\n    const {formatMessage} = useIntl();\n\n    return (\n        <span {...props}>\n            <svg\n                width='16'\n                height='16'\n                viewBox='0 0 16 16'\n                fill='none'\n                xmlns='http://www.w3.org/2000/svg'\n                aria-label={formatMessage({id: 'generic_icons.login.oneLogin', defaultMessage: 'One Login Icon'})}\n            >\n                <path\n                    d='M1.25 12.5V3.50005L10.25 0.872048L14.75 2.00605V13.616L9.872 15.128L2.006 12.5L10.25 13.616V2.74405L4.256 4.25605V11.366L1.25 12.5Z'\n                    fill='#DC3C00'\n                />\n            </svg>\n        </span>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\n\nexport default function LoginOpenIdIcon(props: React.HTMLAttributes<HTMLSpanElement>) {\n    const {formatMessage} = useIntl();\n\n    return (\n        <span {...props}>\n            <svg\n                width='16'\n                height='16'\n                viewBox='0 0 16 16'\n                fill='none'\n                xmlns='http://www.w3.org/2000/svg'\n                aria-label={formatMessage({id: 'generic_icons.login.openid', defaultMessage: 'OpenID Icon'})}\n            >\n                <path\n                    d='M7.19995 1.2V15.2L9.59995 14V0L7.19995 1.2Z'\n                    fill='#F48018'\n                />\n                <path\n                    d='M15.6652 5.3302L16.0001 8.80002L11.313 7.85391'\n                    fill='#AEB0B3'\n                />\n                <path\n                    d='M10 4.61206V6.19484C11.015 6.37555 12.0439 6.71905 12.768 7.17939L14.4821 6.09046C13.3141 5.34815 11.686 4.82159 10 4.61206ZM2.42378 9.90251C2.42378 8.13669 4.2954 6.64895 6.84567 6.19484V4.61206C2.94414 5.09733 0 7.28065 0 9.90251C0 12.5244 3.08942 14.8262 7.2 15.2V13.6001C4.43386 13.2433 2.42378 11.7657 2.42378 9.90251Z'\n                    fill='#AEB0B3'\n                />\n            </svg>\n\n        </span>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport classNames from 'classnames';\nimport React, {useState} from 'react';\nimport type {ChangeEventHandler, FocusEventHandler} from 'react';\nimport {useIntl} from 'react-intl';\n\nimport {ItemStatus} from 'utils/constants';\n\nimport Input from '../input/input';\nimport type {CustomMessageInputType, SIZE} from '../input/input';\n\nimport './password_input.scss';\n\ntype PasswordInputProps = {\n    className?: string;\n    value: string;\n    onChange: ChangeEventHandler<HTMLInputElement>;\n    onBlur?: FocusEventHandler<HTMLInputElement>;\n    onFocus?: FocusEventHandler<HTMLInputElement>;\n    hasError?: boolean;\n    info?: string;\n    error?: string;\n    createMode?: boolean;\n    disabled?: boolean;\n    inputSize?: SIZE;\n};\n\nconst PasswordInput = React.forwardRef((\n    {\n        className,\n        value,\n        onChange,\n        onBlur,\n        onFocus,\n        hasError,\n        info,\n        error,\n        createMode,\n        disabled,\n        inputSize,\n    }: PasswordInputProps,\n    ref?: React.Ref<HTMLInputElement>,\n) => {\n    const {formatMessage} = useIntl();\n\n    const [showPassword, setShowPassword] = useState(false);\n\n    const toggleShowPassword = () => setShowPassword(!showPassword);\n\n    const customMessageError: CustomMessageInputType | null = error ? {type: ItemStatus.ERROR, value: error} : null;\n    const customMessageInfo: CustomMessageInputType | null = info ? {type: ItemStatus.INFO, value: info} : null;\n    const customMessage = error ? customMessageError : customMessageInfo;\n\n    const placeHolder = createMode ? formatMessage({id: 'widget.passwordInput.createPassword', defaultMessage: 'Choose a Password'}) : formatMessage({id: 'widget.passwordInput.password', defaultMessage: 'Password'});\n\n    return (\n        <Input\n            className={classNames('password-input', className)}\n            wrapperClassName={'password-input-with-toggle'}\n            name='password-input'\n            type={showPassword && !disabled ? 'text' : 'password'}\n            inputSize={inputSize}\n            addon={\n                <button\n                    id='password_toggle'\n                    type='button'\n                    aria-label={formatMessage({id: 'widget.passwordInput.passwordToggle', defaultMessage: 'Show or hide password'})}\n                    className='password-input-toggle'\n                    onClick={toggleShowPassword}\n                    disabled={disabled}\n                >\n                    <i className={showPassword && !disabled ? 'icon-eye-off-outline' : 'icon-eye-outline'}/>\n                </button>\n            }\n            value={value}\n            onChange={onChange}\n            onBlur={onBlur}\n            onFocus={onFocus}\n            placeholder={placeHolder}\n            hasError={hasError}\n            customMessage={error || info ? customMessage : undefined}\n            disabled={disabled}\n            ref={ref}\n        />\n    );\n});\n\nexport default PasswordInput;\n"],"names":["login","loginId","password","mfaToken","arguments","length","undefined","async","dispatch","type","UserTypes","data","loggedInUserProfile","Client4","batchActions","loadRolesIfNeeded","roles","split","error","logError","loginWithDesktopToken","token","loginById","id","DESKTOP_AUTH_PREFIX","DesktopAuthStatus","DesktopAuthToken","_ref","href","onLogin","useDispatch","history","useHistory","search","useLocation","query","URLSearchParams","serverToken","get","receivedClientToken","storedClientToken","sessionStorage","getItem","status","setStatus","useState","LoggedIn","None","showBottomMessage","setShowBottomMessage","forwardToDesktopApp","url","URL","window","location","protocol","searchParams","toString","replace","concat","mainMessage","subMessage","bottomMessage","useEffect","timeout","setTimeout","clearTimeout","Error","removeItem","loginError","server_error_id","tryDesktopLogin","desktopToken","DesktopApp","crypto","slice","setItem","parsedURL","params","set","open","origin","pathname","WaitingForBrowser","openExternalLoginURL","React","FormattedMessage","defaultMessage","values","a","chunks","onClick","b","push","className","classNames","complete","propTypes","_pt","ExternalLoginButton","icon","label","style","direction","AlternateLink","alternateMessage","alternateLinkPath","alternateLinkLabel","Link","to","Column","title","message","SVGElement","extraContent","onEnterKeyDown","onKeyDown","e","key","Constants","tabIndex","TypingAnimation","words","typingSpeed","pauseDuration","displayedText","setDisplayedText","isDeleting","setIsDeleting","wordIndex","setWordIndex","charIndex","setCharIndex","typingTimeout","handleTyping","currentWord","substring","isRequired","LockIcon","props","formatMessage","useIntl","width","height","viewBox","role","stroke","strokeWidth","fill","fillRule","transform","d","LoginGitlabIcon","xmlns","clipRule","LoginGoggleIcon","LoginOffice365Icon","LoginOpenIdIcon","ref","value","onChange","onBlur","onFocus","hasError","info","createMode","disabled","inputSize","showPassword","setShowPassword","customMessageError","ItemStatus","customMessageInfo","customMessage","placeHolder","Input","wrapperClassName","name","addon","toggleShowPassword","placeholder"],"sourceRoot":""}