{"version":3,"file":"7590.51612def51168fe0c55e.js","mappings":"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","sources":["webpack://mattermost-webapp/./src/components/drafts/drafts_link/drafts_tour_tip/drafts_tour_tip.tsx","webpack://mattermost-webapp/./src/components/drafts/drafts_link/drafts_link.tsx"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {memo, useCallback, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useHistory, useRouteMatch} from 'react-router-dom';\n\nimport {TourTip, useMeasurePunchouts} from '@mattermost/components';\n\nimport {Preferences} from 'mattermost-redux/constants';\n\nimport {setDraftsTourTipPreference} from 'actions/views/drafts';\nimport {showDraftsPulsatingDotAndTourTip} from 'selectors/drafts';\n\nimport Tag from 'components/widgets/tag/tag';\n\nconst title = (\n    <span className='d-flex align-items-center'>\n        <FormattedMessage\n            id='drafts.tutorialTip.title'\n            defaultMessage='Drafts'\n        />\n        <Tag\n            variant='success'\n            text={(\n                <FormattedMessage\n                    id='tag.default.new'\n                    defaultMessage='NEW'\n                />\n            )}\n        />\n    </span>\n);\n\nconst screen = (\n    <>\n        <FormattedMessage\n            id='drafts.tutorialTip.description'\n            defaultMessage='With the new Drafts view, all of your unfinished messages are collected in one place. Return here to read, edit, or send draft messages.'\n        />\n    </>\n\n);\n\nconst prevBtn = (\n    <FormattedMessage\n        id='drafts.tutorial_tip.notNow'\n        defaultMessage='Not now'\n    />\n);\n\nconst nextBtn = (\n    <FormattedMessage\n        id='drafts.tutorial_tip.viewDrafts'\n        defaultMessage='View drafts'\n    />\n);\n\nconst DraftsTourTip = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const showTip = useSelector(showDraftsPulsatingDotAndTourTip);\n    const {url} = useRouteMatch();\n    const nextUrl = `${url}/drafts`;\n\n    const [tipOpened, setTipOpened] = useState(showTip);\n\n    const handleDismiss = useCallback((e: React.MouseEvent) => {\n        e.stopPropagation();\n        dispatch(setDraftsTourTipPreference({[Preferences.DRAFTS_TOUR_TIP_SHOWED]: true}));\n        setTipOpened(false);\n    }, []);\n\n    const handleNext = useCallback(() => {\n        dispatch(setDraftsTourTipPreference({[Preferences.DRAFTS_TOUR_TIP_SHOWED]: true}));\n        setTipOpened(false);\n        history.push(nextUrl);\n    }, []);\n\n    const handleOpen = useCallback((e: React.MouseEvent) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (tipOpened) {\n            dispatch(setDraftsTourTipPreference({[Preferences.DRAFTS_TOUR_TIP_SHOWED]: true}));\n            setTipOpened(false);\n        } else {\n            setTipOpened(true);\n        }\n    }, []);\n\n    const overlayPunchOut = useMeasurePunchouts(['sidebar-drafts-button'], []);\n\n    return (\n        <>\n            {\n                (showTip) &&\n                <TourTip\n                    show={tipOpened}\n                    screen={screen}\n                    title={title}\n                    overlayPunchOut={overlayPunchOut}\n                    placement='right-start'\n                    pulsatingDotPlacement='right'\n                    step={1}\n                    singleTip={true}\n                    showOptOut={false}\n                    interactivePunchOut={false}\n                    handleDismiss={handleDismiss}\n                    handleNext={handleNext}\n                    handleOpen={handleOpen}\n                    handlePrevious={handleDismiss}\n                    nextBtn={nextBtn}\n                    prevBtn={prevBtn}\n                />\n            }\n        </>\n    );\n};\n\nexport default memo(DraftsTourTip);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, { memo, useEffect } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NavLink, useRouteMatch } from \"react-router-dom\";\n\nimport { syncedDraftsAreAllowedAndEnabled } from \"mattermost-redux/selectors/entities/preferences\";\nimport { getCurrentTeamId } from \"mattermost-redux/selectors/entities/teams\";\n\nimport { getDrafts } from \"actions/views/drafts\";\nimport { makeGetDraftsCount } from \"selectors/drafts\";\n\nimport DraftsTourTip from \"components/drafts/drafts_link/drafts_tour_tip/drafts_tour_tip\";\nimport ChannelMentionBadge from \"components/sidebar/sidebar_channel/channel_mention_badge\";\n\nimport \"./drafts_link.scss\";\n\nconst getDraftsCount = makeGetDraftsCount();\n\nfunction DraftsLink() {\n    const dispatch = useDispatch();\n\n    const syncedDraftsAllowedAndEnabled = useSelector(\n        syncedDraftsAreAllowedAndEnabled\n    );\n    const count = useSelector(getDraftsCount);\n    const teamId = useSelector(getCurrentTeamId);\n\n    const { url } = useRouteMatch();\n    const isDraftUrlMatch = useRouteMatch(\"/:team/drafts\");\n\n    useEffect(() => {\n        if (syncedDraftsAllowedAndEnabled) {\n            dispatch(getDrafts(teamId));\n        }\n    }, [teamId, syncedDraftsAllowedAndEnabled]);\n\n    if (!count && !isDraftUrlMatch) {\n        return null;\n    }\n\n    return (\n        <ul className=\"SidebarDrafts NavGroupContent nav nav-pills__container\">\n            <li\n                className=\"SidebarChannel\"\n                tabIndex={-1}\n                id=\"sidebar-drafts-button\"\n            >\n                <NavLink\n                    to={`${url}/drafts`}\n                    id=\"sidebarItem_drafts\"\n                    activeClassName=\"active\"\n                    draggable=\"false\"\n                    className=\"SidebarLink sidebar-item\"\n                    tabIndex={0}\n                >\n                    <i\n                        data-testid=\"draftIcon\"\n                        className=\"icon icon-pencil-outline\"\n                    />\n                    <div className=\"SidebarChannelLinkLabel_wrapper\">\n                        <span className=\"SidebarChannelLinkLabel sidebar-item__name\">\n                            <FormattedMessage\n                                id=\"drafts.sidebarLink\"\n                                defaultMessage=\"Drafts\"\n                            />\n                        </span>\n                    </div>\n                    {count > 0 && (\n                        <ChannelMentionBadge unreadMentions={count} />\n                    )}\n                </NavLink>\n                <DraftsTourTip />\n            </li>\n        </ul>\n    );\n}\n\nexport default memo(DraftsLink);\n"],"names":["title","React","className","FormattedMessage","id","defaultMessage","Tag","variant","text","screen","prevBtn","nextBtn","DraftsTourTip","dispatch","useDispatch","history","useHistory","showTip","useSelector","showDraftsPulsatingDotAndTourTip","url","useRouteMatch","nextUrl","concat","tipOpened","setTipOpened","useState","handleDismiss","useCallback","e","stopPropagation","setDraftsTourTipPreference","Preferences","handleNext","push","handleOpen","preventDefault","overlayPunchOut","useMeasurePunchouts","TourTip","show","placement","pulsatingDotPlacement","step","singleTip","showOptOut","interactivePunchOut","handlePrevious","memo","getDraftsCount","makeGetDraftsCount","DraftsLink","syncedDraftsAllowedAndEnabled","syncedDraftsAreAllowedAndEnabled","count","teamId","getCurrentTeamId","isDraftUrlMatch","useEffect","getDrafts","tabIndex","NavLink","to","activeClassName","draggable","ChannelMentionBadge","unreadMentions"],"sourceRoot":""}