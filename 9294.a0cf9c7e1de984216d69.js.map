{"version":3,"file":"9294.a0cf9c7e1de984216d69.js","mappings":"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","sources":["webpack://mattermost-webapp/./src/components/async_load.tsx","webpack://mattermost-webapp/./src/utils/browser_history.tsx","webpack://mattermost-webapp/./src/utils/desktop_api.ts","webpack://mattermost-webapp/./src/utils/server_version.tsx","webpack://mattermost-webapp/./src/utils/user_agent.tsx"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {type ComponentType} from 'react';\n\nexport function makeAsyncComponent<ComponentProps>(displayName: string, LazyComponent: React.ComponentType<ComponentProps>, fallback: React.ReactNode = null) {\n    const Component: ComponentType<ComponentProps> = (props) => (\n        <React.Suspense fallback={fallback}>\n            <LazyComponent {...props}/>\n        </React.Suspense>\n    );\n    Component.displayName = displayName;\n    return Component;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {createBrowserHistory} from 'history';\nimport type {History} from 'history';\n\nimport {getModule} from 'module_registry';\nimport DesktopApp from 'utils/desktop_api';\nimport {isServerVersionGreaterThanOrEqualTo} from 'utils/server_version';\nimport {isDesktopApp, getDesktopVersion} from 'utils/user_agent';\n\nconst b = createBrowserHistory({basename: window.basename});\nconst isDesktop = isDesktopApp() && isServerVersionGreaterThanOrEqualTo(getDesktopVersion(), '5.0.0');\nconst browserHistory = {\n    ...b,\n    push: (path: string | { pathname: string }, ...args: string[]) => {\n        if (isDesktop) {\n            DesktopApp.doBrowserHistoryPush(typeof path === 'object' ? path.pathname : path);\n        } else {\n            b.push(path, ...args);\n        }\n    },\n};\n\nif (isDesktop) {\n    DesktopApp.onBrowserHistoryPush((pathName) => b.push(pathName));\n}\n\n/**\n * Returns the current history object.\n *\n * If you're calling this from within a React component, consider using the useHistory hook from react-router-dom.\n */\nexport function getHistory() {\n    return getModule<History>('utils/browser_history') ?? browserHistory;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport semver from 'semver';\n\nimport type {DesktopAPI} from '@mattermost/desktop-api';\n\nimport {isDesktopApp} from 'utils/user_agent';\n\ndeclare global {\n    interface Window {\n        desktopAPI?: Partial<DesktopAPI>;\n    }\n}\n\nclass DesktopAppAPI {\n    private name?: string;\n    private version?: string | null;\n    private dev?: boolean;\n\n    /**\n     * @deprecated\n     */\n    private postMessageListeners?: Map<string, Set<(message: unknown) => void>>;\n\n    constructor() {\n        // Check the user agent string first\n        if (!isDesktopApp()) {\n            return;\n        }\n\n        this.getDesktopAppInfo().then(({name, version}) => {\n            this.name = name;\n            this.version = semver.valid(semver.coerce(version));\n\n            // Legacy Desktop App version, used by some plugins\n            if (!window.desktop) {\n                window.desktop = {};\n            }\n            window.desktop.version = semver.valid(semver.coerce(version));\n        });\n        window.desktopAPI?.isDev?.().then((isDev) => {\n            this.dev = isDev;\n        });\n\n        // Legacy code - to be removed\n        this.postMessageListeners = new Map();\n        window.addEventListener('message', this.postMessageListener);\n        window.addEventListener('beforeunload', () => {\n            window.removeEventListener('message', this.postMessageListener);\n        });\n    }\n\n    /*******************************************************\n     * Getters/setters for Desktop App specific information\n     *******************************************************/\n\n    getAppName = () => {\n        return this.name;\n    };\n\n    getAppVersion = () => {\n        return this.version;\n    };\n\n    isDev = () => {\n        return this.dev;\n    };\n\n    private getDesktopAppInfo = () => {\n        if (window.desktopAPI?.getAppInfo) {\n            return window.desktopAPI.getAppInfo();\n        }\n\n        return this.invokeWithMessaging<void, {name: string; version: string}>(\n            'webapp-ready',\n            undefined,\n            'register-desktop',\n        );\n    };\n\n    /**********************\n     * Exposed API methods\n     **********************/\n\n    /**\n     * Invokes\n     */\n\n    getBrowserHistoryStatus = async () => {\n        if (window.desktopAPI?.requestBrowserHistoryStatus) {\n            return window.desktopAPI.requestBrowserHistoryStatus();\n        }\n\n        const {enableBack, enableForward} = await this.invokeWithMessaging<void, {enableBack: boolean; enableForward: boolean}>(\n            'history-button',\n            undefined,\n            'history-button-return',\n        );\n\n        return {\n            canGoBack: enableBack,\n            canGoForward: enableForward,\n        };\n    };\n\n    /**\n     * Listeners\n     */\n\n    onUserActivityUpdate = (listener: (userIsActive: boolean, idleTime: number, isSystemEvent: boolean) => void) => {\n        if (window.desktopAPI?.onUserActivityUpdate) {\n            return window.desktopAPI.onUserActivityUpdate(listener);\n        }\n\n        const legacyListener = ({userIsActive, manual}: {userIsActive: boolean; manual: boolean}) => listener(userIsActive, 0, manual);\n        this.addPostMessageListener('user-activity-update', legacyListener);\n\n        return () => this.removePostMessageListener('user-activity-update', legacyListener);\n    };\n\n    onNotificationClicked = (listener: (channelId: string, teamId: string, url: string) => void) => {\n        if (window.desktopAPI?.onNotificationClicked) {\n            return window.desktopAPI.onNotificationClicked(listener);\n        }\n\n        const legacyListener = ({channel, teamId, url}: {channel: {id: string}; teamId: string; url: string}) => listener(channel.id, teamId, url);\n        this.addPostMessageListener('notification-clicked', legacyListener);\n\n        return () => this.removePostMessageListener('notification-clicked', legacyListener);\n    };\n\n    onBrowserHistoryPush = (listener: (pathName: string) => void) => {\n        if (window.desktopAPI?.onBrowserHistoryPush) {\n            return window.desktopAPI.onBrowserHistoryPush(listener);\n        }\n\n        const legacyListener = ({pathName}: {pathName: string}) => listener(pathName);\n        this.addPostMessageListener('browser-history-push-return', legacyListener);\n\n        return () => this.removePostMessageListener('browser-history-push-return', legacyListener);\n    };\n\n    onBrowserHistoryStatusUpdated = (listener: (enableBack: boolean, enableForward: boolean) => void) => {\n        if (window.desktopAPI?.onBrowserHistoryStatusUpdated) {\n            return window.desktopAPI.onBrowserHistoryStatusUpdated(listener);\n        }\n\n        const legacyListener = ({enableBack, enableForward}: {enableBack: boolean; enableForward: boolean}) => listener(enableBack, enableForward);\n        this.addPostMessageListener('history-button-return', legacyListener);\n\n        return () => this.removePostMessageListener('history-button-return', legacyListener);\n    };\n\n    /**\n     * One-ways\n     */\n\n    dispatchNotification = async (\n        title: string,\n        body: string,\n        channelId: string,\n        teamId: string,\n        silent: boolean,\n        soundName: string,\n        url: string,\n    ) => {\n        if (window.desktopAPI?.sendNotification) {\n            const result = await window.desktopAPI.sendNotification(title, body, channelId, teamId, url, silent, soundName);\n            return result ?? {status: 'unsupported', reason: 'desktop_app_unsupported'};\n        }\n\n        // get the desktop app to trigger the notification\n        window.postMessage(\n            {\n                type: 'dispatch-notification',\n                message: {\n                    title,\n                    body,\n                    channel: {id: channelId},\n                    teamId,\n                    silent,\n                    data: {soundName},\n                    url,\n                },\n            },\n            window.location.origin,\n        );\n        return {status: 'unsupported', reason: 'desktop_app_unsupported'};\n    };\n\n    doBrowserHistoryPush = (path: string) => {\n        if (window.desktopAPI?.sendBrowserHistoryPush) {\n            window.desktopAPI.sendBrowserHistoryPush(path);\n            return;\n        }\n\n        window.postMessage(\n            {\n                type: 'browser-history-push',\n                message: {path},\n            },\n            window.location.origin,\n        );\n    };\n\n    updateUnreadsAndMentions = (isUnread: boolean, mentionCount: number) =>\n        window.desktopAPI?.setUnreadsAndMentions && window.desktopAPI.setUnreadsAndMentions(isUnread, mentionCount);\n    setSessionExpired = (expired: boolean) => window.desktopAPI?.setSessionExpired && window.desktopAPI.setSessionExpired(expired);\n    signalLogin = () => window.desktopAPI?.onLogin && window.desktopAPI?.onLogin();\n    signalLogout = () => window.desktopAPI?.onLogout && window.desktopAPI?.onLogout();\n\n    /*********************************************************************\n     * Helper functions for legacy code\n     * Remove all of this once we have no use for message passing anymore\n     *********************************************************************/\n\n    /**\n     * @deprecated\n     */\n    private postMessageListener = ({origin, data: {type, message}}: {origin: string; data: {type: string; message: unknown}}) => {\n        if (origin !== window.location.origin) {\n            return;\n        }\n\n        const listeners = this.postMessageListeners?.get(type);\n        if (!listeners) {\n            return;\n        }\n\n        listeners.forEach((listener) => {\n            listener(message);\n        });\n    };\n\n    /**\n     * @deprecated\n     */\n    private addPostMessageListener = (channel: string, listener: (message: any) => void) => {\n        if (this.postMessageListeners?.has(channel)) {\n            this.postMessageListeners.set(channel, this.postMessageListeners.get(channel)!.add(listener));\n        } else {\n            this.postMessageListeners?.set(channel, new Set([listener]));\n        }\n    };\n\n    /**\n     * @deprecated\n     */\n    private removePostMessageListener = (channel: string, listener: (message: any) => void) => {\n        const set = this.postMessageListeners?.get(channel);\n        set?.delete(listener);\n        if (set?.size) {\n            this.postMessageListeners?.set(channel, set);\n        } else {\n            this.postMessageListeners?.delete(channel);\n        }\n    };\n\n    /**\n     * @deprecated\n     */\n    private invokeWithMessaging = <T, T2>(\n        sendChannel: string,\n        sendData?: T,\n        receiveChannel?: string,\n    ) => {\n        return new Promise<T2>((resolve) => {\n            /* create and register a temporary listener if necessary */\n            const response = ({origin, data: {type, message}}: {origin: string; data: {type: string; message: T2}}) => {\n                /* ignore messages from other frames */\n                if (origin !== window.location.origin) {\n                    return;\n                }\n\n                /* ignore messages from other channels */\n                if (type !== (receiveChannel ?? sendChannel)) {\n                    return;\n                }\n\n                /* clean up listener and resolve */\n                window.removeEventListener('message', response);\n                resolve(message);\n            };\n\n            window.addEventListener('message', response);\n            window.postMessage(\n                {type: sendChannel, message: sendData},\n                window.location.origin,\n            );\n        });\n    };\n}\n\nconst DesktopApp = new DesktopAppAPI();\nexport default DesktopApp;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\n/**\n * Boolean function to check if a server version is greater than another.\n *\n * currentVersion: The server version being checked\n * compareVersion: The version to compare the former version against\n *\n * eg.  currentVersion = 4.16.0, compareVersion = 4.17.0 returns false\n *      currentVersion = 4.16.1, compareVersion = 4.16.1 returns true\n */\nexport function isServerVersionGreaterThanOrEqualTo(currentVersion: string, compareVersion: string): boolean {\n    if (currentVersion === compareVersion) {\n        return true;\n    }\n\n    // We only care about the numbers\n    const currentVersionNumber = (currentVersion || '').split('.').filter((x) => (/^[0-9]+$/).exec(x) !== null);\n    const compareVersionNumber = (compareVersion || '').split('.').filter((x) => (/^[0-9]+$/).exec(x) !== null);\n\n    for (let i = 0; i < Math.max(currentVersionNumber.length, compareVersionNumber.length); i++) {\n        const currentVersion = parseInt(currentVersionNumber[i], 10) || 0;\n        const compareVersion = parseInt(compareVersionNumber[i], 10) || 0;\n        if (currentVersion > compareVersion) {\n            return true;\n        }\n\n        if (currentVersion < compareVersion) {\n            return false;\n        }\n    }\n\n    // If all components are equal, then return true\n    return true;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\n/*\nExample User Agents\n--------------------\n\nChrome:\n    Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36\n\nFirefox:\n    Mozilla/5.0 (Windows NT 10.0; WOW64; rv:47.0) Gecko/20100101 Firefox/47.0\n\nIE11:\n    Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko\n\nEdge:\n    Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586\n\nChromeOS Chromebook:\n    Mozilla/5.0 (X11; CrOS x86_64 8172.45.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.64 Safari/537.36\n\nDesktop App:\n    Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Mattermost/1.2.1 Chrome/49.0.2623.75 Electron/0.37.8 Safari/537.36\n    Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586\n    Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Mattermost/3.4.1 Chrome/53.0.2785.113 Electron/1.4.2 Safari/537.36\n    Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Mattermost/3.4.1 Chrome/51.0.2704.106 Electron/1.2.8 Safari/537.36\n\nAndroid Chrome:\n    Mozilla/5.0 (Linux; Android 4.0.4; Galaxy Nexus Build/IMM76B) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.133 Mobile Safari/535.19\n\nAndroid Firefox:\n    Mozilla/5.0 (Android; U; Android; pl; rv:1.9.2.8) Gecko/20100202 Firefox/3.5.8\n    Mozilla/5.0 (Android 7.0; Mobile; rv:54.0) Gecko/54.0 Firefox/54.0\n    Mozilla/5.0 (Android 7.0; Mobile; rv:57.0) Gecko/57.0 Firefox/57.0\n\nAndroid App:\n    Mozilla/5.0 (Linux; U; Android 4.1.1; en-gb; Build/KLP) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Safari/534.30\n    Mozilla/5.0 (Linux; Android 4.4; Nexus 5 Build/_BuildID_) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/30.0.0.0 Mobile Safari/537.36\n    Mozilla/5.0 (Linux; Android 5.1.1; Nexus 5 Build/LMY48B; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/43.0.2357.65 Mobile Safari/537.36\n\niOS Safari:\n    Mozilla/5.0 (iPhone; U; CPU like Mac OS X; en) AppleWebKit/420+ (KHTML, like Gecko) Version/3.0 Mobile/1A543 Safari/419.3\n\niOS Android:\n    Mozilla/5.0 (iPhone; U; CPU iPhone OS 5_1_1 like Mac OS X; en) AppleWebKit/534.46.0 (KHTML, like Gecko) CriOS/19.0.1084.60 Mobile/9B206 Safari/7534.48.3\n\niOS App:\n    Mozilla/5.0 (iPhone; CPU iPhone OS 9_3_2 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13F69\n*/\n\nconst userAgent = () => window.navigator.userAgent;\n\nexport function isChrome(): boolean {\n    return userAgent().indexOf('Chrome') > -1 && userAgent().indexOf('Edge') === -1;\n}\n\nexport function isSafari(): boolean {\n    return userAgent().indexOf('Safari') !== -1 && userAgent().indexOf('Chrome') === -1;\n}\n\nexport function isIosSafari(): boolean {\n    return (userAgent().indexOf('iPhone') !== -1 || userAgent().indexOf('iPad') !== -1) && userAgent().indexOf('Safari') !== -1 && userAgent().indexOf('CriOS') === -1;\n}\n\nexport function isIosChrome(): boolean {\n    return userAgent().indexOf('CriOS') !== -1;\n}\n\nexport function isIosFirefox(): boolean {\n    return userAgent().indexOf('FxiOS') !== -1;\n}\n\nexport function isIosWeb(): boolean {\n    return isIosSafari() || isIosChrome();\n}\n\nexport function isIos(): boolean {\n    return userAgent().indexOf('iPhone') !== -1 || userAgent().indexOf('iPad') !== -1;\n}\n\nexport function isAndroid(): boolean {\n    return userAgent().indexOf('Android') !== -1;\n}\n\nexport function isAndroidChrome(): boolean {\n    return userAgent().indexOf('Android') !== -1 && userAgent().indexOf('Chrome') !== -1 && userAgent().indexOf('Version') === -1;\n}\n\nexport function isAndroidFirefox(): boolean {\n    return userAgent().indexOf('Android') !== -1 && userAgent().indexOf('Firefox') !== -1;\n}\n\nexport function isAndroidWeb(): boolean {\n    return isAndroidChrome() || isAndroidFirefox();\n}\n\nexport function isIosClassic(): boolean {\n    return isMobileApp() && isIos();\n}\n\n// Returns true if and only if the user is using a Mattermost mobile app. This will return false if the user is using the\n// web browser on a mobile device.\nexport function isMobileApp(): boolean {\n    return isMobile() && !isIosWeb() && !isAndroidWeb();\n}\n\n// Returns true if and only if the user is using Mattermost from either the mobile app or the web browser on a mobile device.\nexport function isMobile(): boolean {\n    return isIos() || isAndroid();\n}\n\nexport function isFirefox(): boolean {\n    return userAgent().indexOf('Firefox') !== -1;\n}\n\nexport function isChromebook(): boolean {\n    return userAgent().indexOf('CrOS') !== -1;\n}\n\nexport function isInternetExplorer(): boolean {\n    return userAgent().indexOf('Trident') !== -1;\n}\n\nexport function isEdge(): boolean {\n    return userAgent().indexOf('Edge') !== -1;\n}\n\nexport function isChromiumEdge(): boolean {\n    return userAgent().indexOf('Edg') !== -1 && userAgent().indexOf('Edge') === -1;\n}\n\nexport function isDesktopApp(): boolean {\n    return userAgent().indexOf('Mattermost') !== -1 && userAgent().indexOf('Electron') !== -1;\n}\n\nexport function isWindowsApp(): boolean {\n    return isDesktopApp() && isWindows();\n}\n\nexport function isMacApp(): boolean {\n    return isDesktopApp() && isMac();\n}\n\nexport function isWindows(): boolean {\n    return userAgent().indexOf('Windows') !== -1;\n}\n\nexport function isMac(): boolean {\n    return userAgent().indexOf('Macintosh') !== -1;\n}\n\nexport function isLinux(): boolean {\n    return navigator.platform.toUpperCase().indexOf('LINUX') >= 0;\n}\n\nexport function isWindows7(): boolean {\n    const appVersion = navigator.appVersion;\n\n    if (!appVersion) {\n        return false;\n    }\n\n    return (/\\bWindows NT 6\\.1\\b/).test(appVersion);\n}\n\nexport function getDesktopVersion(): string {\n    // use if the value window.desktop.version is not set yet\n    const regex = /Mattermost\\/(\\d+\\.\\d+\\.\\d+)/gm;\n    const match = regex.exec(window.navigator.appVersion)?.[1] || '';\n    return match;\n}\n"],"names":["makeAsyncComponent","displayName","LazyComponent","fallback","arguments","length","undefined","Component","props","React","b","createBrowserHistory","basename","window","isDesktop","isDesktopApp","isServerVersionGreaterThanOrEqualTo","getDesktopVersion","browserHistory","_objectSpread","push","path","DesktopApp","pathname","_len","args","Array","_key","getHistory","_getModule","getModule","pathName","constructor","_window$desktopAPI15","_window$desktopAPI15$","_defineProperty","this","name","version","dev","_window$desktopAPI","desktopAPI","getAppInfo","invokeWithMessaging","async","_window$desktopAPI2","requestBrowserHistoryStatus","enableBack","enableForward","canGoBack","canGoForward","listener","_window$desktopAPI3","onUserActivityUpdate","legacyListener","_ref","userIsActive","manual","addPostMessageListener","removePostMessageListener","_window$desktopAPI4","onNotificationClicked","_ref2","channel","teamId","url","id","_window$desktopAPI5","onBrowserHistoryPush","_ref3","_window$desktopAPI6","onBrowserHistoryStatusUpdated","_ref4","title","body","channelId","silent","soundName","_window$desktopAPI7","sendNotification","result","status","reason","postMessage","type","message","data","location","origin","_window$desktopAPI8","sendBrowserHistoryPush","isUnread","mentionCount","_window$desktopAPI9","setUnreadsAndMentions","expired","_window$desktopAPI10","setSessionExpired","_window$desktopAPI11","_window$desktopAPI12","onLogin","_window$desktopAPI13","_window$desktopAPI14","onLogout","_ref5","_this$postMessageList","listeners","postMessageListeners","get","forEach","_this$postMessageList2","_this$postMessageList3","has","set","add","Set","_this$postMessageList4","_this$postMessageList5","_this$postMessageList6","delete","size","sendChannel","sendData","receiveChannel","Promise","resolve","response","_ref6","removeEventListener","addEventListener","getDesktopAppInfo","then","_ref7","semver","desktop","isDev","call","Map","postMessageListener","currentVersion","compareVersion","currentVersionNumber","split","filter","x","exec","compareVersionNumber","i","Math","max","parseInt","userAgent","navigator","isChrome","indexOf","isSafari","isIosSafari","isIosChrome","isIosFirefox","isIosWeb","isIos","isAndroid","isAndroidWeb","isMobileApp","isMobile","isFirefox","isChromebook","isInternetExplorer","isEdge","isChromiumEdge","isMacApp","isMac","isWindows","isLinux","platform","toUpperCase","_regex$exec","appVersion"],"sourceRoot":""}