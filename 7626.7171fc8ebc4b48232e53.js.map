{"version":3,"file":"7626.7171fc8ebc4b48232e53.js","mappings":"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","sources":["webpack://mattermost-webapp/./src/plugins/call_button/index.ts","webpack://mattermost-webapp/./src/plugins/call_button/call_button.tsx","webpack://mattermost-webapp/./src/components/widgets/icons/plugin_channel_header_icon.tsx","webpack://mattermost-webapp/./src/plugins/channel_header_plug/channel_header_plug.tsx","webpack://mattermost-webapp/./src/plugins/channel_header_plug/index.ts","webpack://mattermost-webapp/./src/components/channel_header/channel_header_title_direct.tsx","webpack://mattermost-webapp/./src/components/channel_header/channel_header_title_favorite.tsx","webpack://mattermost-webapp/./src/components/channel_header/channel_header_title_group.tsx","webpack://mattermost-webapp/./src/components/channel_header/channel_header_title.tsx","webpack://mattermost-webapp/./src/components/channel_header/channel_info_button.tsx","webpack://mattermost-webapp/./src/components/channel_header/channel_header.tsx","webpack://mattermost-webapp/./src/components/channel_header/index.ts","webpack://mattermost-webapp/../node_modules/dom-helpers/ownerWindow.js","webpack://mattermost-webapp/../node_modules/dom-helpers/query/height.js","webpack://mattermost-webapp/../node_modules/dom-helpers/util/requestAnimationFrame.js","webpack://mattermost-webapp/../node_modules/react-overlays/lib/Affix.js","webpack://mattermost-webapp/../node_modules/react-overlays/lib/AutoAffix.js","webpack://mattermost-webapp/../node_modules/react-overlays/lib/index.js","webpack://mattermost-webapp/../node_modules/react-overlays/lib/utils/getDocumentHeight.js","webpack://mattermost-webapp/../node_modules/react-overlays/lib/utils/ownerWindow.js"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getCurrentChannel, getMyCurrentChannelMembership} from 'mattermost-redux/selectors/entities/channels';\n\nimport type {GlobalState} from 'types/store/index';\n\nimport CallButton from './call_button';\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        currentChannel: getCurrentChannel(state),\n        pluginCallComponents: state.plugins.components.CallButton,\n        channelMember: getMyCurrentChannelMembership(state),\n        sidebarOpen: state.views.rhs.isSidebarOpen,\n    };\n}\n\nexport default connect(mapStateToProps)(CallButton);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport classNames from 'classnames';\nimport React, {useState, useEffect, useRef} from 'react';\nimport type {CSSProperties} from 'react';\nimport {useIntl} from 'react-intl';\n\nimport ChevronDownIcon from '@mattermost/compass-icons/components/chevron-down';\nimport PhoneOutlineIcon from '@mattermost/compass-icons/components/phone-outline';\nimport type {Channel, ChannelMembership} from '@mattermost/types/channels';\n\nimport Menu from 'components/widgets/menu/menu';\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\n\nimport {Constants} from 'utils/constants';\n\nimport type {PluginComponent} from 'types/store/plugins';\n\nimport './call_button.scss';\n\ntype Props = {\n    currentChannel?: Channel;\n    channelMember?: ChannelMembership;\n    pluginCallComponents: PluginComponent[];\n    sidebarOpen: boolean;\n}\n\nexport default function CallButton({pluginCallComponents, currentChannel, channelMember, sidebarOpen}: Props) {\n    const [active, setActive] = useState(false);\n    const [clickEnabled, setClickEnabled] = useState(true);\n    const prevSidebarOpen = useRef(sidebarOpen);\n    const {formatMessage} = useIntl();\n\n    useEffect(() => {\n        if (prevSidebarOpen.current && !sidebarOpen) {\n            setClickEnabled(false);\n            setTimeout(() => {\n                setClickEnabled(true);\n            }, Constants.CHANNEL_HEADER_BUTTON_DISABLE_TIMEOUT);\n        }\n        prevSidebarOpen.current = sidebarOpen;\n    }, [sidebarOpen]);\n\n    if (pluginCallComponents.length === 0) {\n        return null;\n    }\n\n    const style = {\n        container: {\n            marginTop: 16,\n            height: 32,\n        } as CSSProperties,\n    };\n\n    if (pluginCallComponents.length === 1) {\n        const item = pluginCallComponents[0];\n        const clickHandler = () => item.action?.(currentChannel, channelMember);\n\n        return (\n            <div\n                style={style.container}\n                className='flex-child'\n                onClick={clickEnabled ? clickHandler : undefined}\n                onTouchEnd={clickEnabled ? clickHandler : undefined}\n            >\n                {item.button}\n            </div>\n        );\n    }\n\n    const items = pluginCallComponents.map((item) => {\n        return (\n            <li\n                className='MenuItem'\n                key={item.id}\n                onClick={(e) => {\n                    e.preventDefault();\n                    item.action?.(currentChannel, channelMember);\n                }}\n            >\n                {item.dropdownButton}\n            </li>\n        );\n    });\n\n    return (\n        <div\n            style={style.container}\n            className='flex-child'\n        >\n            <MenuWrapper onToggle={(toggle: boolean) => setActive(toggle)}>\n                <button className={classNames('style--none call-button dropdown', {active})}>\n                    <PhoneOutlineIcon\n                        color='inherit'\n                        aria-label={formatMessage({id: 'generic_icons.call', defaultMessage: 'Call icon'}).toLowerCase()}\n                    />\n                    <span className='call-button-label'>{'Call'}</span>\n                    <ChevronDownIcon\n                        color='inherit'\n                        aria-label={formatMessage({id: 'generic_icons.dropdown', defaultMessage: 'Dropdown Icon'}).toLowerCase()}\n                    />\n                </button>\n                <Menu\n                    id='callOptions'\n                    ariaLabel={formatMessage({id: 'call_button.menuAriaLabel', defaultMessage: 'Call type selector'})}\n                    customStyles={{\n                        top: 'auto',\n                        left: 'auto',\n                        right: 0,\n                    }}\n                >\n                    {items}\n                </Menu>\n            </MenuWrapper>\n        </div>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\n\nexport default function PluginChannelHeaderIcon(props: React.HTMLAttributes<HTMLSpanElement>) {\n    const {formatMessage} = useIntl();\n    return (\n        <span {...props}>\n            <svg\n                width='16px'\n                height='16px'\n                viewBox='0 0 18 18'\n                version='1.1'\n                role='img'\n                aria-label={formatMessage({id: 'generic_icons.plugins', defaultMessage: 'Plugins'})}\n            >\n                <path d='M14.58 9.14399L17.136 6.60599C17.304 6.42599 17.388 6.20999 17.388 5.95799C17.388 5.70599 17.298 5.49599 17.118 5.32799C16.95 5.14799 16.74 5.05799 16.488 5.05799C16.236 5.05799 16.026 5.14799 15.858 5.32799L13.302 7.86599L10.134 4.69799L12.672 2.14199C12.852 1.97399 12.942 1.76399 12.942 1.51199C12.942 1.25999 12.852 1.04999 12.672 0.881987C12.504 0.701987 12.294 0.611987 12.042 0.611987C11.79 0.611987 11.574 0.695987 11.394 0.863987L8.856 3.41999L6.318 0.863987C6.138 0.695987 5.922 0.611987 5.67 0.611987C5.418 0.611987 5.208 0.695987 5.04 0.863987V0.881987C4.86 1.04999 4.77 1.25999 4.77 1.51199C4.77 1.76399 4.86 1.97399 5.04 2.14199L5.67 2.78999L2.808 5.65199C2.016 6.44399 1.458 7.36799 1.134 8.42399C0.81 9.45599 0.744 10.512 0.936 11.592C1.128 12.66 1.56 13.632 2.232 14.508L0.27 16.47C0.09 16.638 0 16.848 0 17.1C0 17.352 0.09 17.562 0.27 17.73C0.45 17.898 0.66 17.982 0.9 17.982C1.152 17.994 1.362 17.91 1.53 17.73L3.492 15.768C4.368 16.44 5.34 16.872 6.408 17.064C7.488 17.256 8.544 17.19 9.576 16.866C10.632 16.542 11.556 15.984 12.348 15.192L15.21 12.33L15.858 12.96C16.026 13.14 16.236 13.23 16.488 13.23C16.74 13.23 16.95 13.14 17.118 12.96H17.136C17.304 12.792 17.388 12.582 17.388 12.33C17.388 12.078 17.304 11.862 17.136 11.682L14.58 9.14399ZM11.088 13.914C10.452 14.55 9.702 14.976 8.838 15.192C8.01 15.408 7.176 15.408 6.336 15.192C5.472 14.976 4.722 14.55 4.086 13.914C3.45 13.278 3.024 12.528 2.808 11.664C2.592 10.824 2.592 9.98999 2.808 9.16199C3.024 8.29799 3.45 7.54799 4.086 6.91199L6.948 4.04999L13.95 11.052L11.088 13.914Z'/>\n            </svg>\n        </span>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\n/* eslint-disable react/no-multi-comp */\n\nimport React from 'react';\nimport {Dropdown} from 'react-bootstrap';\nimport {FormattedMessage, injectIntl} from 'react-intl';\nimport type {IntlShape} from 'react-intl';\nimport {RootCloseWrapper} from 'react-overlays';\n\nimport type {AppBinding} from '@mattermost/types/apps';\nimport type {Channel, ChannelMembership} from '@mattermost/types/channels';\n\nimport {AppCallResponseTypes} from 'mattermost-redux/constants/apps';\n\nimport HeaderIconWrapper from 'components/channel_header/components/header_icon_wrapper';\nimport PluginChannelHeaderIcon from 'components/widgets/icons/plugin_channel_header_icon';\nimport WithTooltip from 'components/with_tooltip';\n\nimport {createCallContext} from 'utils/apps';\nimport {Constants} from 'utils/constants';\n\nimport type {HandleBindingClick, OpenAppsModal, PostEphemeralCallResponseForChannel} from 'types/apps';\nimport type {PluginComponent} from 'types/store/plugins';\n\ntype CustomMenuProps = {\n    open?: boolean;\n    children?: React.ReactNode;\n    onClose: () => void;\n    rootCloseEvent?: 'click' | 'mousedown';\n    bsRole: string;\n}\n\nexport const maxComponentsBeforeDropdown = 15;\n\nclass CustomMenu extends React.PureComponent<CustomMenuProps> {\n    handleRootClose = () => {\n        this.props.onClose();\n    };\n\n    render() {\n        const {\n            open,\n            rootCloseEvent,\n            children,\n        } = this.props;\n\n        return (\n            <RootCloseWrapper\n                disabled={!open}\n                onRootClose={this.handleRootClose}\n                event={rootCloseEvent}\n            >\n                <ul\n                    role='menu'\n                    className='dropdown-menu channel-header_plugin-dropdown'\n                >\n                    {children}\n                </ul>\n            </RootCloseWrapper>\n        );\n    }\n}\n\ntype CustomToggleProps = {\n    children?: React.ReactNode;\n    dropdownOpen?: boolean;\n    onClick?: (e: React.MouseEvent) => void;\n    bsRole: string;\n}\n\nclass CustomToggle extends React.PureComponent<CustomToggleProps> {\n    handleClick = (e: React.MouseEvent) => {\n        if (this.props.onClick) {\n            this.props.onClick(e);\n        }\n    };\n\n    render() {\n        const {children} = this.props;\n\n        let activeClass = '';\n        if (this.props.dropdownOpen) {\n            activeClass = ' channel-header__icon--active';\n        }\n\n        return (\n            <button\n                id='pluginChannelHeaderButtonDropdown'\n                className={'channel-header__icon channel-header__icon--wide ' + activeClass}\n                type='button'\n                onClick={this.handleClick}\n            >\n                {children}\n            </button>\n        );\n    }\n}\n\ntype ChannelHeaderPlugProps = {\n    intl: IntlShape;\n    components: PluginComponent[];\n    appBindings?: AppBinding[];\n    appsEnabled: boolean;\n    channel: Channel;\n    channelMember?: ChannelMembership;\n    sidebarOpen: boolean;\n    shouldShowAppBar: boolean;\n    actions: {\n        handleBindingClick: HandleBindingClick;\n        postEphemeralCallResponseForChannel: PostEphemeralCallResponseForChannel;\n        openAppsModal: OpenAppsModal;\n    };\n}\n\ntype ChannelHeaderPlugState = {\n    dropdownOpen: boolean;\n}\n\nclass ChannelHeaderPlug extends React.PureComponent<ChannelHeaderPlugProps, ChannelHeaderPlugState> {\n    public static defaultProps: Partial<ChannelHeaderPlugProps> = {\n        components: [],\n        appBindings: [],\n    };\n\n    private disableButtonsClosingRHS = false;\n\n    constructor(props: ChannelHeaderPlugProps) {\n        super(props);\n        this.state = {\n            dropdownOpen: false,\n        };\n    }\n\n    componentDidUpdate(prevProps: ChannelHeaderPlugProps) {\n        if (prevProps.sidebarOpen && !this.props.sidebarOpen) {\n            this.disableButtonsClosingRHS = true;\n\n            setTimeout(() => {\n                this.disableButtonsClosingRHS = false;\n            }, Constants.CHANNEL_HEADER_BUTTON_DISABLE_TIMEOUT);\n        }\n    }\n\n    toggleDropdown = (dropdownOpen: boolean) => {\n        this.setState({dropdownOpen});\n    };\n\n    onClose = () => {\n        this.toggleDropdown(false);\n    };\n\n    fireAction = (action: (channel: Channel, channelMember?: ChannelMembership) => void) => {\n        if (this.disableButtonsClosingRHS) {\n            return;\n        }\n\n        action(this.props.channel, this.props.channelMember);\n    };\n\n    fireActionAndClose = (action: (channel: Channel, channelMember?: ChannelMembership) => void) => {\n        action(this.props.channel, this.props.channelMember);\n        this.onClose();\n    };\n\n    createComponentButton = (plug: PluginComponent) => {\n        // These values are supposed to be strings based on PluginComponent, but some plugins pass non-strings,\n        // so do some hacky stuff to try to convert it back to a string. DO NOT USE THIS ELSEWHERE!\n        function tooltipToAriaLabelHack(intl: IntlShape, stringOrElement: string | React.ReactElement) {\n            if (typeof stringOrElement === 'string') {\n                // This is the case that we hope for\n                return stringOrElement;\n            }\n\n            if (stringOrElement.type === FormattedMessage) {\n                // This is a FormattedMessage, so extract the props to translate the text manually\n                return intl.formatMessage(\n                    {\n                        id: stringOrElement.props.id,\n                        defaultMessage: stringOrElement.props.defaultMessage,\n                    },\n                    stringOrElement.props.value,\n                );\n            }\n\n            return '';\n        }\n\n        let ariaLabel;\n        if (plug.tooltipText) {\n            ariaLabel = tooltipToAriaLabelHack(this.props.intl, plug.tooltipText);\n        } else if (plug.dropdownText) {\n            ariaLabel = tooltipToAriaLabelHack(this.props.intl, plug.dropdownText);\n        }\n\n        return (\n            <HeaderIconWrapper\n                key={'channelHeaderButton' + plug.id}\n                buttonClass='channel-header__icon'\n                iconComponent={plug.icon!}\n                onClick={() => this.fireAction(plug.action!)}\n                buttonId={plug.id + 'ChannelHeaderButton'}\n                tooltip={plug.tooltipText ?? plug.dropdownText ?? ''}\n                ariaLabelOverride={ariaLabel}\n                pluginId={plug.pluginId}\n            />\n        );\n    };\n\n    onBindingClick = async (binding: AppBinding) => {\n        if (this.disableButtonsClosingRHS) {\n            return;\n        }\n\n        const {channel, intl} = this.props;\n\n        const context = createCallContext(\n            binding.app_id,\n            binding.location,\n            this.props.channel.id,\n            this.props.channel.team_id,\n        );\n\n        const res = await this.props.actions.handleBindingClick(binding, context, intl);\n\n        if (res.error) {\n            const errorResponse = res.error;\n            const errorMessage = errorResponse.text || intl.formatMessage({\n                id: 'apps.error.unknown',\n                defaultMessage: 'Unknown error occurred.',\n            });\n            this.props.actions.postEphemeralCallResponseForChannel(errorResponse, errorMessage, channel.id);\n            return;\n        }\n\n        const callResp = res.data!;\n        switch (callResp.type) {\n        case AppCallResponseTypes.OK:\n            if (callResp.text) {\n                this.props.actions.postEphemeralCallResponseForChannel(callResp, callResp.text, channel.id);\n            }\n            break;\n        case AppCallResponseTypes.NAVIGATE:\n            break;\n        case AppCallResponseTypes.FORM:\n            if (callResp.form) {\n                this.props.actions.openAppsModal(callResp.form, context);\n            }\n            break;\n        default: {\n            const errorMessage = this.props.intl.formatMessage({\n                id: 'apps.error.responses.unknown_type',\n                defaultMessage: 'App response type not supported. Response type: {type}.',\n            }, {\n                type: callResp.type,\n            });\n            this.props.actions.postEphemeralCallResponseForChannel(callResp, errorMessage, channel.id);\n        }\n        }\n    };\n\n    createAppBindingButton = (binding: AppBinding) => {\n        return (\n            <HeaderIconWrapper\n                key={`channelHeaderButton_${binding.app_id}_${binding.location}`}\n                buttonClass='channel-header__icon style--none'\n                iconComponent={(\n                    <img\n                        src={binding.icon}\n                        width='24'\n                        height='24'\n                    />\n                )}\n                onClick={() => this.onBindingClick(binding)}\n                buttonId={`${binding.app_id}_${binding.location}`}\n                tooltip={binding.label}\n            />\n        );\n    };\n\n    createDropdown = (plugs: PluginComponent[], appBindings: AppBinding[]) => {\n        const componentItems = plugs.filter((plug) => plug.action).map((plug) => {\n            return (\n                <li\n                    key={'channelHeaderPlug' + plug.id}\n                >\n                    <a\n                        href='#'\n                        className='d-flex align-items-center'\n                        onClick={() => this.fireActionAndClose(plug.action!)}\n                    >\n                        <span className='d-flex align-items-center overflow--ellipsis'>{plug.icon}</span>\n                        <span>{plug.dropdownText}</span>\n                    </a>\n                </li>\n            );\n        });\n\n        let items = componentItems;\n        if (this.props.appsEnabled) {\n            items = componentItems.concat(appBindings.map((binding) => {\n                return (\n                    <li\n                        key={'channelHeaderPlug' + binding.app_id + binding.location}\n                    >\n                        <a\n                            href='#'\n                            className='d-flex align-items-center'\n                            onClick={() => this.fireActionAndClose(() => this.onBindingClick(binding))}\n                        >\n                            <span className='d-flex align-items-center overflow--ellipsis icon'>{(<img src={binding.icon}/>)}</span>\n                            <span>{binding.label}</span>\n                        </a>\n                    </li>\n                );\n            }));\n        }\n\n        return (\n            <div className='flex-child'>\n                <Dropdown\n                    id='channelHeaderPlugDropdown'\n                    onToggle={this.toggleDropdown}\n                    open={this.state.dropdownOpen}\n                >\n                    <CustomToggle\n                        bsRole='toggle'\n                        dropdownOpen={this.state.dropdownOpen}\n                    >\n                        <WithTooltip\n                            id='removeIcon'\n                            placement='bottom'\n                            title={\n                                <FormattedMessage\n                                    id='generic_icons.plugins'\n                                    defaultMessage='Plugins'\n                                />\n                            }\n                        >\n                            <React.Fragment>\n                                <PluginChannelHeaderIcon\n                                    id='pluginChannelHeaderIcon'\n                                    className='icon icon--standard icon__pluginChannelHeader'\n                                    aria-hidden='true'\n                                />\n                                <span\n                                    id='pluginCount'\n                                    className='icon__text'\n                                >\n                                    {items.length}\n                                </span>\n                            </React.Fragment>\n                        </WithTooltip>\n                    </CustomToggle>\n                    <CustomMenu\n                        bsRole='menu'\n                        open={this.state.dropdownOpen}\n                        onClose={this.onClose}\n                    >\n                        {items}\n                    </CustomMenu>\n                </Dropdown>\n            </div>\n        );\n    };\n\n    render() {\n        const components = this.props.components || [];\n        const appBindings = this.props.appsEnabled ? this.props.appBindings || [] : [];\n        if (this.props.shouldShowAppBar || (components.length === 0 && appBindings.length === 0)) {\n            return null;\n        } else if ((components.length + appBindings.length) <= maxComponentsBeforeDropdown) {\n            let componentButtons = components.filter((plug) => plug.icon && plug.action).map(this.createComponentButton);\n            if (this.props.appsEnabled) {\n                componentButtons = componentButtons.concat(appBindings.map(this.createAppBindingButton));\n            }\n            return componentButtons;\n        }\n\n        return this.createDropdown(components, appBindings);\n    }\n}\n\nexport default injectIntl(ChannelHeaderPlug);\n/* eslint-enable react/no-multi-comp */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport type {Dispatch} from 'redux';\n\nimport {appBarEnabled, appsEnabled, getChannelHeaderAppBindings} from 'mattermost-redux/selectors/entities/apps';\nimport {getTheme} from 'mattermost-redux/selectors/entities/preferences';\n\nimport {handleBindingClick, openAppsModal, postEphemeralCallResponseForChannel} from 'actions/apps';\nimport {getChannelHeaderPluginComponents, shouldShowAppBar} from 'selectors/plugins';\n\nimport type {GlobalState} from 'types/store';\n\nimport ChannelHeaderPlug from './channel_header_plug';\n\nfunction mapStateToProps(state: GlobalState) {\n    const apps = appsEnabled(state);\n    return {\n        components: getChannelHeaderPluginComponents(state),\n        appBindings: getChannelHeaderAppBindings(state),\n        appsEnabled: apps,\n        appBarEnabled: appBarEnabled(state),\n        theme: getTheme(state),\n        sidebarOpen: state.views.rhs.isSidebarOpen,\n        shouldShowAppBar: shouldShowAppBar(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators({\n            handleBindingClick,\n            postEphemeralCallResponseForChannel,\n            openAppsModal,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChannelHeaderPlug);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, { memo } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\n\nimport type { UserProfile } from \"@mattermost/types/users\";\n\nimport { getTeammateNameDisplaySetting } from \"mattermost-redux/selectors/entities/preferences\";\nimport { getCurrentUser } from \"mattermost-redux/selectors/entities/users\";\nimport { displayUsername, isGuest } from \"mattermost-redux/utils/user_utils\";\n\nimport GuestTag from \"components/widgets/tag/guest_tag\";\n\ntype Props = {\n    dmUser?: UserProfile;\n};\n\nconst ChannelHeaderTitleDirect = ({ dmUser }: Props) => {\n    const currentUser = useSelector(getCurrentUser);\n    const teammateNameDisplaySetting = useSelector(\n        getTeammateNameDisplaySetting\n    );\n    const displayName = displayUsername(dmUser, teammateNameDisplaySetting);\n\n    return (\n        <React.Fragment>\n            {currentUser.id !== dmUser?.id && displayName + \" \"}\n            {currentUser.id === dmUser?.id && (\n                <FormattedMessage\n                    id=\"channel_header.directchannel.you\"\n                    defaultMessage=\"Infogito\"\n                    values={{ displayName }}\n                />\n            )}\n            {isGuest(dmUser?.roles ?? \"\") && <GuestTag />}\n        </React.Fragment>\n    );\n};\n\nexport default memo(ChannelHeaderTitleDirect);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport classNames from 'classnames';\nimport React, {memo, useCallback} from 'react';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {favoriteChannel, unfavoriteChannel} from 'mattermost-redux/actions/channels';\nimport {getCurrentChannel, isCurrentChannelFavorite} from 'mattermost-redux/selectors/entities/channels';\n\nimport WithTooltip from 'components/with_tooltip';\n\nconst ChannelHeaderTitleFavorite = () => {\n    const intl = useIntl();\n    const dispatch = useDispatch();\n    const isFavorite = useSelector(isCurrentChannelFavorite);\n    const channel = useSelector(getCurrentChannel);\n    const channelIsArchived = (channel?.delete_at ?? 0) > 0;\n\n    const toggleFavoriteCallback = useCallback((e: React.MouseEvent<HTMLButtonElement>) => {\n        e.stopPropagation();\n        if (!channel) {\n            return;\n        }\n        if (isFavorite) {\n            dispatch(unfavoriteChannel(channel.id));\n        } else {\n            dispatch(favoriteChannel(channel.id));\n        }\n    }, [isFavorite, channel?.id]);\n\n    if (!channel || channelIsArchived) {\n        return null;\n    }\n\n    let ariaLabel = intl.formatMessage({id: 'channelHeader.addToFavorites', defaultMessage: 'Add to Favorites'});\n    if (isFavorite) {\n        ariaLabel = intl.formatMessage({id: 'channelHeader.removeFromFavorites', defaultMessage: 'Remove from Favorites'});\n    }\n    ariaLabel = ariaLabel.toLowerCase();\n\n    const title = (\n        <>\n            {!isFavorite &&\n                <FormattedMessage\n                    id='channelHeader.addToFavorites'\n                    defaultMessage='Add to Favorites'\n                />}\n            {isFavorite &&\n                <FormattedMessage\n                    id='channelHeader.removeFromFavorites'\n                    defaultMessage='Remove from Favorites'\n                />}\n        </>\n    );\n\n    return (\n        <WithTooltip\n            key={`isFavorite-${isFavorite}`}\n            id='favoriteTooltip'\n            title={title}\n            placement='bottom'\n        >\n            <button\n                id='toggleFavorite'\n                onClick={toggleFavoriteCallback}\n                className={classNames('channel-header__favorites btn btn-icon btn-xs', {active: isFavorite, inactive: !isFavorite})}\n                aria-label={ariaLabel}\n            >\n                <i className={classNames('icon', {'icon-star': isFavorite, 'icon-star-outline': !isFavorite})}/>\n            </button>\n        </WithTooltip>\n    );\n};\n\nexport default memo(ChannelHeaderTitleFavorite);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {memo} from 'react';\nimport {useSelector} from 'react-redux';\n\nimport type {UserProfile} from '@mattermost/types/users';\n\nimport {getCurrentChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getTeammateNameDisplaySetting} from 'mattermost-redux/selectors/entities/preferences';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {displayUsername, isGuest} from 'mattermost-redux/utils/user_utils';\n\nimport GuestTag from 'components/widgets/tag/guest_tag';\n\ntype Props = {\n    gmMembers?: UserProfile[];\n}\n\nconst ChannelHeaderTitleGroup = ({\n    gmMembers,\n}: Props) => {\n    const currentUser = useSelector(getCurrentUser);\n    const teammateNameDisplaySetting = useSelector(getTeammateNameDisplaySetting);\n    const channel = useSelector(getCurrentChannel);\n\n    if (!channel) {\n        return null;\n    }\n\n    // map the displayname to the gm member users\n    const membersMap: Record<string, UserProfile[]> = {};\n    if (gmMembers) {\n        for (const user of gmMembers) {\n            if (user.id === currentUser.id) {\n                continue;\n            }\n            const userDisplayName = displayUsername(user, teammateNameDisplaySetting);\n\n            if (!membersMap[userDisplayName]) {\n                membersMap[userDisplayName] = []; //Create an array for cases with same display name\n            }\n\n            membersMap[userDisplayName].push(user);\n        }\n    }\n\n    const displayNames = channel.display_name.split(', ');\n\n    return (\n        <React.Fragment>\n            {displayNames.map((displayName, index) => {\n                if (!membersMap[displayName]) {\n                    return displayName;\n                }\n\n                const user = membersMap[displayName].shift();\n\n                return (\n                    <React.Fragment key={user?.id}>\n                        {index > 0 && ', '}\n                        {displayName}\n                        {isGuest(user?.roles ?? '') && <GuestTag/>}\n                    </React.Fragment>\n                );\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default memo(ChannelHeaderTitleGroup);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport classNames from 'classnames';\nimport type {ReactNode} from 'react';\nimport React, {memo, useState, useRef, useEffect} from 'react';\nimport {useIntl} from 'react-intl';\nimport {useSelector} from 'react-redux';\n\nimport type {UserProfile} from '@mattermost/types/users';\n\nimport {Client4} from 'mattermost-redux/client';\nimport {getCurrentChannel} from 'mattermost-redux/selectors/entities/channels';\n\nimport {getIsRhsOpen} from 'selectors/rhs';\n\nimport {ChannelHeaderDropdown} from 'components/channel_header_dropdown';\nimport ProfilePicture from 'components/profile_picture';\nimport SharedChannelIndicator from 'components/shared_channel_indicator';\nimport ArchiveIcon from 'components/widgets/icons/archive_icon';\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\nimport BotTag from 'components/widgets/tag/bot_tag';\nimport WithTooltip from 'components/with_tooltip';\n\nimport {Constants} from 'utils/constants';\n\nimport ChannelHeaderTitleDirect from './channel_header_title_direct';\nimport ChannelHeaderTitleFavorite from './channel_header_title_favorite';\nimport ChannelHeaderTitleGroup from './channel_header_title_group';\n\ntype Props = {\n    dmUser?: UserProfile;\n    gmMembers?: UserProfile[];\n}\n\nconst ChannelHeaderTitle = ({\n    dmUser,\n    gmMembers,\n}: Props) => {\n    const [titleMenuOpen, setTitleMenuOpen] = useState(false);\n    const [showTooltip, setShowTooltip] = useState(false);\n    const intl = useIntl();\n    const channel = useSelector(getCurrentChannel);\n\n    const headerItemRef = useRef<HTMLElement | null>(null);\n    const isRHSOpen = useSelector(getIsRhsOpen);\n\n    useEffect(() => {\n        enableToolTipIfNeeded();\n\n        // Re-check on window resize\n        const handleResize = () => enableToolTipIfNeeded();\n        window.addEventListener('resize', handleResize);\n\n        return () => window.removeEventListener('resize', handleResize);\n    }, [channel, gmMembers, dmUser, isRHSOpen]);\n\n    if (!channel) {\n        return null;\n    }\n\n    const enableToolTipIfNeeded = () => {\n        const element = headerItemRef.current;\n        const isTooltip = element && element.offsetWidth < element.scrollWidth;\n        setShowTooltip(isTooltip as boolean);\n    };\n\n    const isDirect = (channel.type === Constants.DM_CHANNEL);\n    const isGroup = (channel.type === Constants.GM_CHANNEL);\n    const channelIsArchived = channel.delete_at !== 0;\n\n    let archivedIcon: React.ReactNode = null;\n    if (channelIsArchived) {\n        archivedIcon = <ArchiveIcon className='icon icon__archive icon channel-header-archived-icon svg-text-color'/>;\n    }\n\n    let sharedIcon = null;\n    if (channel.shared) {\n        sharedIcon = (\n            <SharedChannelIndicator\n                className='shared-channel-icon'\n                channelType={channel.type}\n                withTooltip={true}\n            />\n        );\n    }\n\n    let channelTitle: ReactNode = channel.display_name;\n    if (isDirect) {\n        channelTitle = <ChannelHeaderTitleDirect dmUser={dmUser}/>;\n    } else if (isGroup) {\n        channelTitle = <ChannelHeaderTitleGroup gmMembers={gmMembers}/>;\n    }\n\n    if (isDirect && dmUser?.is_bot) {\n        return (\n            <div\n                id='channelHeaderDropdownButton'\n                className='channel-header__bot'\n            >\n                <ChannelHeaderTitleFavorite/>\n                <ProfilePicture\n                    src={Client4.getProfilePictureUrl(dmUser.id, dmUser.last_picture_update)}\n                    size='sm'\n                />\n                <strong\n                    role='heading'\n                    aria-level={2}\n                    id='channelHeaderTitle'\n                    className='heading'\n                >\n                    <span>\n                        {archivedIcon}\n                        {channelTitle}\n                    </span>\n                </strong>\n                <BotTag/>\n            </div>\n        );\n    }\n\n    return (\n        <div className='channel-header__top'>\n            <ChannelHeaderTitleFavorite/>\n            {isDirect && dmUser && ( // Check if it's a DM and dmUser is provided\n                <ProfilePicture\n                    src={Client4.getProfilePictureUrl(dmUser.id, dmUser.last_picture_update)}\n                    size='sm'\n                    status={channel.status}\n                />\n            )}\n            <MenuWrapper onToggle={setTitleMenuOpen}>\n                <div\n                    id='channelHeaderDropdownButton'\n                >\n                    <button\n                        className={classNames('channel-header__trigger style--none', {active: titleMenuOpen})}\n                        aria-label={intl.formatMessage({id: 'channel_header.menuAriaLabel', defaultMessage: 'Channel Menu'}).toLowerCase()}\n                    >\n                        {showTooltip ? (\n                            <WithTooltip\n                                id='channelHeaderTooltip'\n                                placement='bottom'\n                                title={channelTitle as string}\n                            >\n                                <strong\n                                    role='heading'\n                                    aria-level={2}\n                                    id='channelHeaderTitle'\n                                    className='heading'\n                                    ref={headerItemRef}\n                                >\n                                    <span>\n                                        {archivedIcon}\n                                        {channelTitle}\n                                        {sharedIcon}\n                                    </span>\n                                </strong>\n                            </WithTooltip>\n                        ) : (\n                            <strong\n                                role='heading'\n                                aria-level={2}\n                                id='channelHeaderTitle'\n                                className='heading'\n                                ref={headerItemRef}\n                            >\n                                <span>\n                                    {archivedIcon}\n                                    {channelTitle}\n                                    {sharedIcon}\n                                </span>\n                            </strong>\n                        )}\n                        <span\n                            id='channelHeaderDropdownIcon'\n                            className='icon icon-chevron-down header-dropdown-chevron-icon'\n                        />\n                    </button>\n                </div>\n                <ChannelHeaderDropdown/>\n            </MenuWrapper>\n        </div>\n    );\n};\n\nexport default memo(ChannelHeaderTitle);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {useCallback} from 'react';\nimport {useIntl} from 'react-intl';\nimport {useDispatch, useSelector} from 'react-redux';\nimport styled from 'styled-components';\n\nimport type {Channel} from '@mattermost/types/channels';\n\nimport {closeRightHandSide, showChannelInfo} from 'actions/views/rhs';\nimport {getIsRhsOpen, getRhsState} from 'selectors/rhs';\n\nimport {RHSStates} from 'utils/constants';\n\nimport type {RhsState} from 'types/store/rhs';\n\nimport HeaderIconWrapper from './components/header_icon_wrapper';\n\ninterface Props {\n    channel: Channel;\n}\n\nconst Icon = styled.i`\n    font-size:18px;\n    line-height:18px;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst ChannelInfoButton = ({channel}: Props) => {\n    const dispatch = useDispatch();\n    const intl = useIntl();\n\n    const rhsState: RhsState = useSelector(getRhsState);\n    const isRhsOpen: boolean = useSelector(getIsRhsOpen);\n    const isChannelInfo = rhsState === RHSStates.CHANNEL_INFO ||\n        rhsState === RHSStates.CHANNEL_MEMBERS ||\n        rhsState === RHSStates.CHANNEL_FILES ||\n        rhsState === RHSStates.PIN;\n\n    const buttonActive = isRhsOpen && isChannelInfo;\n    const toggleRHS = useCallback(() => {\n        if (buttonActive) {\n            const action = isChannelInfo ? closeRightHandSide() : showChannelInfo(channel.id);\n            dispatch(action);\n        } else {\n            dispatch(showChannelInfo(channel.id));\n        }\n    }, [buttonActive, channel.id, isChannelInfo, dispatch]);\n\n    let tooltip;\n    if (buttonActive) {\n        tooltip = intl.formatMessage({id: 'channel_header.closeChannelInfo', defaultMessage: 'Close info'});\n    } else {\n        tooltip = intl.formatMessage({id: 'channel_header.openChannelInfo', defaultMessage: 'View Info'});\n    }\n\n    let buttonClass = 'channel-header__icon';\n    if (buttonActive) {\n        buttonClass += ' channel-header__icon--active-inverted';\n    }\n\n    return (\n        <HeaderIconWrapper\n            buttonClass={buttonClass}\n            buttonId='channel-info-btn'\n            onClick={toggleRHS}\n            iconComponent={<Icon\n                className='icon-information-outline'\n                css={{color: '#02B9B5'}}\n            />}\n            tooltip={tooltip}\n        />\n    );\n};\n\nexport default ChannelInfoButton;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport type {MouseEvent, ReactNode, RefObject} from 'react';\nimport {Overlay} from 'react-bootstrap';\nimport {FormattedMessage, injectIntl} from 'react-intl';\nimport type {IntlShape} from 'react-intl';\n\nimport PhoneOutlineIcon from '@mattermost/compass-icons/components/phone-outline';\nimport type {Channel, ChannelMembership, ChannelNotifyProps} from '@mattermost/types/channels';\nimport type {UserCustomStatus, UserProfile} from '@mattermost/types/users';\n\nimport {Permissions} from 'mattermost-redux/constants';\nimport {memoizeResult} from 'mattermost-redux/utils/helpers';\n\nimport CustomStatusEmoji from 'components/custom_status/custom_status_emoji';\nimport CustomStatusText from 'components/custom_status/custom_status_text';\nimport EditChannelHeaderModal from 'components/edit_channel_header_modal';\nimport Markdown from 'components/markdown';\nimport type {BaseOverlayTrigger} from 'components/overlay_trigger';\nimport ChannelPermissionGate from 'components/permissions_gates/channel_permission_gate';\nimport Timestamp from 'components/timestamp';\nimport Popover from 'components/widgets/popover';\nimport WithTooltip from 'components/with_tooltip';\n\nimport CallButton from 'plugins/call_button';\nimport ChannelHeaderPlug from 'plugins/channel_header_plug';\nimport {\n    Constants,\n    ModalIdentifiers,\n    NotificationLevels,\n    RHSStates,\n} from 'utils/constants';\nimport {handleFormattedTextClick, isEmptyObject} from 'utils/utils';\n\nimport type {ModalData} from 'types/actions';\nimport type {RhsState} from 'types/store/rhs';\n\nimport ChannelHeaderTitle from './channel_header_title';\nimport ChannelInfoButton from './channel_info_button';\nimport HeaderIconWrapper from './components/header_icon_wrapper';\n\nconst headerMarkdownOptions = {singleline: true, mentionHighlight: false, atMentions: true};\nconst popoverMarkdownOptions = {singleline: false, mentionHighlight: false, atMentions: true};\n\nexport type Props = {\n    teamId: string;\n    currentUser: UserProfile;\n    channel?: Channel;\n    memberCount?: number;\n    channelMember?: ChannelMembership;\n    dmUser?: UserProfile;\n    gmMembers?: UserProfile[];\n    isReadOnly?: boolean;\n    isMuted?: boolean;\n    hasGuests?: boolean;\n    rhsState?: RhsState;\n    rhsOpen?: boolean;\n    isQuickSwitcherOpen?: boolean;\n    intl: IntlShape;\n    pinnedPostsCount?: number;\n    hasMoreThanOneTeam?: boolean;\n    actions: {\n        showPinnedPosts: (channelId?: string) => void;\n        showChannelFiles: (channelId: string) => void;\n        closeRightHandSide: () => void;\n        getCustomEmojisInText: (text: string) => void;\n        updateChannelNotifyProps: (userId: string, channelId: string, props: Partial<ChannelNotifyProps>) => void;\n        goToLastViewedChannel: () => void;\n        openModal: <P>(modalData: ModalData<P>) => void;\n        showChannelMembers: (channelId: string, inEditingMode?: boolean) => void;\n    };\n    currentRelativeTeamUrl: string;\n    announcementBarCount: number;\n    customStatus?: UserCustomStatus;\n    isCustomStatusEnabled: boolean;\n    isCustomStatusExpired: boolean;\n    isFileAttachmentsEnabled: boolean;\n    isLastActiveEnabled: boolean;\n    timestampUnits?: string[];\n    lastActivityTimestamp?: number;\n    hideGuestTags: boolean;\n};\n\ntype State = {\n    showChannelHeaderPopover: boolean;\n    channelHeaderPoverWidth: number;\n    leftOffset: number;\n    topOffset: number;\n};\n\nclass ChannelHeader extends React.PureComponent<Props, State> {\n    toggleFavoriteRef: RefObject<HTMLButtonElement>;\n    headerDescriptionRef: RefObject<HTMLSpanElement>;\n    headerPopoverTextMeasurerRef: RefObject<HTMLDivElement>;\n    headerOverlayRef: RefObject<BaseOverlayTrigger>;\n    getHeaderMarkdownOptions: (channelNamesMap: Record<string, any>) => Record<string, any>;\n    getPopoverMarkdownOptions: (channelNamesMap: Record<string, any>) => Record<string, any>;\n\n    constructor(props: Props) {\n        super(props);\n        this.toggleFavoriteRef = React.createRef();\n        this.headerDescriptionRef = React.createRef();\n        this.headerPopoverTextMeasurerRef = React.createRef();\n        this.headerOverlayRef = React.createRef();\n\n        this.state = {\n            showChannelHeaderPopover: false,\n            channelHeaderPoverWidth: 0,\n            leftOffset: 0,\n            topOffset: 0,\n        };\n\n        this.getHeaderMarkdownOptions = memoizeResult((channelNamesMap: Record<string, any>) => (\n            {...headerMarkdownOptions, channelNamesMap}\n        ));\n        this.getPopoverMarkdownOptions = memoizeResult((channelNamesMap: Record<string, any>) => (\n            {...popoverMarkdownOptions, channelNamesMap}\n        ));\n    }\n\n    componentDidMount() {\n        this.props.actions.getCustomEmojisInText(this.props.channel ? this.props.channel.header : '');\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        const header = this.props.channel ? this.props.channel.header : '';\n        const prevHeader = prevProps.channel ? prevProps.channel.header : '';\n        if (header !== prevHeader) {\n            this.props.actions.getCustomEmojisInText(header);\n        }\n    }\n\n    handleClose = () => this.props.actions.goToLastViewedChannel();\n\n    unmute = () => {\n        const {actions, channel, channelMember, currentUser} = this.props;\n\n        if (!channelMember || !currentUser || !channel) {\n            return;\n        }\n\n        const options = {mark_unread: NotificationLevels.ALL};\n        actions.updateChannelNotifyProps(currentUser.id, channel.id, options);\n    };\n\n    mute = () => {\n        const {actions, channel, channelMember, currentUser} = this.props;\n\n        if (!channelMember || !currentUser || !channel) {\n            return;\n        }\n\n        const options = {mark_unread: NotificationLevels.MENTION};\n        actions.updateChannelNotifyProps(currentUser.id, channel.id, options);\n    };\n\n    showPinnedPosts = (e: MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n        if (this.props.rhsState === RHSStates.PIN) {\n            this.props.actions.closeRightHandSide();\n        } else {\n            this.props.actions.showPinnedPosts();\n        }\n    };\n\n    showChannelFiles = () => {\n        if (this.props.rhsState === RHSStates.CHANNEL_FILES) {\n            this.props.actions.closeRightHandSide();\n        } else if (this.props.channel) {\n            this.props.actions.showChannelFiles(this.props.channel.id);\n        }\n    };\n\n    showEditChannelHeaderModal = () => {\n        if (this.headerOverlayRef.current) {\n            this.headerOverlayRef.current.hide();\n        }\n\n        const {actions, channel} = this.props;\n        if (!channel) {\n            return;\n        }\n\n        const modalData = {\n            modalId: ModalIdentifiers.EDIT_CHANNEL_HEADER,\n            dialogType: EditChannelHeaderModal,\n            dialogProps: {channel},\n        };\n\n        actions.openModal(modalData);\n    };\n\n    showChannelHeaderPopover = (headerText: string) => {\n        const headerDescriptionRect = this.headerDescriptionRef.current?.getBoundingClientRect();\n        const headerPopoverTextMeasurerRect = this.headerPopoverTextMeasurerRef.current?.getBoundingClientRect();\n        const announcementBarSize = 40;\n\n        if (headerPopoverTextMeasurerRect && headerDescriptionRect) {\n            if (headerPopoverTextMeasurerRect.width > headerDescriptionRect.width || headerText.match(/\\n{2,}/g)) {\n                const leftOffset = headerDescriptionRect.left - (this.props.hasMoreThanOneTeam ? 313 : 248);\n                this.setState({showChannelHeaderPopover: true, leftOffset});\n            }\n        }\n\n        // add 40px to take the global header into account\n        const topOffset = (announcementBarSize * this.props.announcementBarCount) + 40;\n        const channelHeaderPoverWidth = this.headerDescriptionRef.current?.clientWidth || 0 - (this.props.hasMoreThanOneTeam ? 64 : 0);\n\n        this.setState({topOffset});\n        this.setState({channelHeaderPoverWidth});\n    };\n\n    toggleChannelMembersRHS = () => {\n        if (this.props.rhsState === RHSStates.CHANNEL_MEMBERS) {\n            this.props.actions.closeRightHandSide();\n        } else if (this.props.channel) {\n            this.props.actions.showChannelMembers(this.props.channel.id);\n        }\n    };\n\n    handleFormattedTextClick = (e: MouseEvent<HTMLSpanElement>) => handleFormattedTextClick(e, this.props.currentRelativeTeamUrl);\n\n    renderCustomStatus = () => {\n        const {customStatus, isCustomStatusEnabled, isCustomStatusExpired} = this.props;\n        const isStatusSet = !isCustomStatusExpired && (customStatus?.text || customStatus?.emoji);\n        if (!(isCustomStatusEnabled && isStatusSet)) {\n            return null;\n        }\n\n        return (\n            <div className='custom-emoji__wrapper'>\n                <CustomStatusEmoji\n                    userID={this.props.dmUser?.id}\n                    showTooltip={true}\n                    tooltipDirection='bottom'\n                    emojiStyle={{\n                        verticalAlign: 'top',\n                        margin: '0 4px 1px',\n                    }}\n                />\n                <CustomStatusText\n                    text={customStatus?.text}\n                    className='custom-emoji__text'\n                />\n            </div>\n        );\n    };\n\n    render() {\n        const {\n            teamId,\n            currentUser,\n            gmMembers,\n            channel,\n            channelMember,\n            isMuted: channelMuted,\n            isReadOnly,\n            dmUser,\n            rhsState,\n            hasGuests,\n            hideGuestTags,\n        } = this.props;\n        if (!channel) {\n            return null;\n        }\n\n        const {formatMessage} = this.props.intl;\n        const ariaLabelChannelHeader = this.props.intl.formatMessage({id: 'accessibility.sections.channelHeader', defaultMessage: 'channel header region'});\n\n        let hasGuestsText: ReactNode = '';\n        if (hasGuests && !hideGuestTags) {\n            hasGuestsText = (\n                <span className='has-guest-header'>\n                    <span tabIndex={0}>\n                        <FormattedMessage\n                            id='channel_header.channelHasGuests'\n                            defaultMessage='Channel has guests'\n                        />\n                    </span>\n                </span>\n            );\n        }\n\n        const channelIsArchived = channel.delete_at !== 0;\n        if (isEmptyObject(channel) ||\n            isEmptyObject(channelMember) ||\n            isEmptyObject(currentUser) ||\n            (!dmUser && channel.type === Constants.DM_CHANNEL)\n        ) {\n            // Use an empty div to make sure the header's height stays constant\n            return (\n                <div className='channel-header'/>\n            );\n        }\n\n        const channelNamesMap = channel.props && channel.props.channel_mentions;\n\n        const isDirect = (channel.type === Constants.DM_CHANNEL);\n        const isGroup = (channel.type === Constants.GM_CHANNEL);\n        const isPrivate = (channel.type === Constants.PRIVATE_CHANNEL);\n\n        if (isGroup) {\n            if (hasGuests && !hideGuestTags) {\n                hasGuestsText = (\n                    <span className='has-guest-header'>\n                        <FormattedMessage\n                            id='channel_header.groupMessageHasGuests'\n                            defaultMessage='This group message has guests'\n                        />\n                    </span>\n                );\n            }\n        }\n\n        let dmHeaderTextStatus: ReactNode;\n        if (isDirect && !dmUser?.delete_at && !dmUser?.is_bot) {\n            dmHeaderTextStatus = (\n                <span className='header-status__text'>\n                    {this.renderCustomStatus()}\n                </span>\n            );\n\n            if (this.props.isLastActiveEnabled && this.props.lastActivityTimestamp && this.props.timestampUnits) {\n                dmHeaderTextStatus = (\n                    <span className='header-status__text'>\n                        <span className='last-active__text'>\n                            <FormattedMessage\n                                id='channel_header.lastActive'\n                                defaultMessage='Active {timestamp}'\n                                values={{\n                                    timestamp: (\n                                        <Timestamp\n                                            value={this.props.lastActivityTimestamp}\n                                            units={this.props.timestampUnits}\n                                            useTime={false}\n                                            style={'short'}\n                                        />\n                                    ),\n                                }}\n                            />\n                        </span>\n                        {this.renderCustomStatus()}\n                    </span>\n                );\n            }\n        }\n\n        const channelFilesIconClass = classNames('channel-header__icon channel-header__icon--left btn btn-icon btn-xs ', {\n            'channel-header__icon--active': rhsState === RHSStates.CHANNEL_FILES,\n        });\n        const channelSearchIcon = <i className='icon icon-magnify'/>;\n        const channelMentionIcon = <i className='icon icon-at'/>;\n        const pinnedIconClass = classNames('channel-header__icon channel-header__icon--wide channel-header__icon--left btn btn-icon btn-xs', {\n            'channel-header__icon--active': rhsState === RHSStates.PIN,\n        });\n        const pinnedIcon = this.props.pinnedPostsCount ? (\n            <>\n                <i\n                    aria-hidden='true'\n                    className='icon icon-pin-outline channel-header__pin'\n                />\n                <span\n                    id='channelPinnedPostCountText'\n                    className='icon__text'\n                >\n                    {this.props.pinnedPostsCount}\n                </span>\n            </>\n        ) : (\n            <i\n                aria-hidden='true'\n                className='icon icon-pin-outline channel-header__pin'\n            />\n        );\n\n        let memberListButton = null;\n        if (!isDirect) {\n            const membersIconClass = classNames('member-rhs__trigger channel-header__icon channel-header__icon--wide channel-header__icon--left btn btn-icon btn-xs', {\n                'channel-header__icon--active': rhsState === RHSStates.CHANNEL_MEMBERS,\n            });\n            const membersIcon = this.props.memberCount ? (\n                <>\n                    <i\n                        aria-hidden='true'\n                        className='icon icon-account-outline channel-header__members'\n                    />\n                    <span\n                        id='channelMemberCountText'\n                        className='icon__text'\n                    >\n                        {this.props.memberCount}\n                    </span>\n                </>\n            ) : (\n                <>\n                    <i\n                        aria-hidden='true'\n                        className='icon icon-account-outline channel-header__members'\n                    />\n                    <span\n                        id='channelMemberCountText'\n                        className='icon__text'\n                    >\n                        {'-'}\n                    </span>\n                </>\n            );\n\n            memberListButton = (\n                <HeaderIconWrapper\n                    iconComponent={membersIcon}\n                    tooltip={this.props.intl.formatMessage({id: 'channel_header.channelMembers', defaultMessage: 'Members'})}\n                    buttonClass={membersIconClass}\n                    buttonId={'member_rhs'}\n                    onClick={this.toggleChannelMembersRHS}\n                />\n            );\n        }\n\n        let headerTextContainer;\n        const headerText = (isDirect && dmUser?.is_bot) ? dmUser.bot_description : channel.header;\n        if (headerText) {\n            const imageProps = {\n                hideUtilities: true,\n            };\n            const popoverContent = (\n                <Popover\n                    id='header-popover'\n                    popoverStyle='info'\n                    popoverSize='lg'\n                    style={{transform: `translate(${this.state.leftOffset}px, ${this.state.topOffset}px)`, maxWidth: this.state.channelHeaderPoverWidth + 16}}\n                    placement='bottom'\n                    className={classNames('channel-header__popover', {'chanel-header__popover--lhs_offset': this.props.hasMoreThanOneTeam})}\n                >\n                    <span\n                        onClick={this.handleFormattedTextClick}\n                    >\n                        <Markdown\n                            message={headerText}\n                            options={this.getPopoverMarkdownOptions(channelNamesMap)}\n                            imageProps={imageProps}\n                        />\n                    </span>\n                </Popover>\n            );\n\n            headerTextContainer = (\n                <div\n                    id='channelHeaderDescription'\n                    className='channel-header__description'\n                    dir='auto'\n                >\n                    {dmHeaderTextStatus}\n                    {hasGuestsText}\n                    <div\n                        className='header-popover-text-measurer'\n                        ref={this.headerPopoverTextMeasurerRef}\n                    >\n                        <Markdown\n                            message={headerText.replace(/\\n+/g, ' ')}\n                            options={this.getHeaderMarkdownOptions(channelNamesMap)}\n                            imageProps={imageProps}\n                        />\n                    </div>\n                    <span\n                        className='header-description__text'\n                        onClick={this.handleFormattedTextClick}\n                        onMouseOver={() => this.showChannelHeaderPopover(headerText)}\n                        onMouseOut={() => this.setState({showChannelHeaderPopover: false})}\n                        ref={this.headerDescriptionRef}\n                    >\n                        <Overlay\n                            show={this.state.showChannelHeaderPopover}\n                            placement='bottom'\n                            rootClose={true}\n                            target={this.headerDescriptionRef.current as React.ReactInstance}\n                            ref={this.headerOverlayRef as any}\n                            onHide={() => this.setState({showChannelHeaderPopover: false})}\n                        >\n                            {popoverContent}\n                        </Overlay>\n\n                        <Markdown\n                            message={headerText}\n                            options={this.getHeaderMarkdownOptions(channelNamesMap)}\n                            imageProps={imageProps}\n                        />\n                    </span>\n                </div>\n            );\n        } else {\n            let editMessage;\n            if (!isReadOnly && !channelIsArchived) {\n                if (isDirect || isGroup) {\n                    if (!isDirect || !dmUser?.is_bot) {\n                        editMessage = (\n                            <button\n                                className='header-placeholder style--none'\n                                onClick={this.showEditChannelHeaderModal}\n                            >\n                                <FormattedMessage\n                                    id='channel_header.addChannelHeader'\n                                    defaultMessage='Add a channel header'\n                                />\n                                <i\n                                    className='icon icon-pencil-outline edit-icon'\n                                    aria-label={this.props.intl.formatMessage({id: 'channel_header.editLink', defaultMessage: 'Edit'})}\n                                />\n                            </button>\n                        );\n                    }\n                } else {\n                    editMessage = (\n                        <ChannelPermissionGate\n                            channelId={channel.id}\n                            teamId={teamId}\n                            permissions={[isPrivate ? Permissions.MANAGE_PRIVATE_CHANNEL_PROPERTIES : Permissions.MANAGE_PUBLIC_CHANNEL_PROPERTIES]}\n                        >\n                            <button\n                                className='header-placeholder style--none'\n                                onClick={this.showEditChannelHeaderModal}\n                            >\n                                <FormattedMessage\n                                    id='channel_header.addChannelHeader'\n                                    defaultMessage='Add a channel header'\n                                />\n                                <i\n                                    className='icon icon-pencil-outline edit-icon'\n                                    aria-label={this.props.intl.formatMessage({id: 'channel_header.editLink', defaultMessage: 'Edit'})}\n                                />\n                            </button>\n                        </ChannelPermissionGate>\n                    );\n                }\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            headerTextContainer = (\n                <div\n                    id='channelHeaderDescription'\n                    className='channel-header__description'\n                >\n                    {dmHeaderTextStatus}\n                    {hasGuestsText}\n                    {editMessage}\n                </div>\n            );\n        }\n\n        let muteTrigger;\n        if (channelMuted) {\n            muteTrigger = (\n                <WithTooltip\n                    id='channelMutedTooltip'\n                    placement='bottom'\n                    title={\n                        <FormattedMessage\n                            id='channelHeader.unmute'\n                            defaultMessage='Unmute'\n                        />\n                    }\n                >\n                    <button\n                        id='toggleMute'\n                        onClick={this.unmute}\n                        className={'channel-header__mute inactive btn btn-icon btn-xs'}\n                        aria-label={formatMessage({id: 'generic_icons.muted', defaultMessage: 'Muted Icon'})}\n                    >\n                        <i className={'icon icon-bell-off-outline'}/>\n                    </button>\n                </WithTooltip>\n            );\n        }\n\n        return (\n            <div\n                id='channel-header'\n                aria-label={ariaLabelChannelHeader}\n                role='banner'\n                tabIndex={-1}\n                data-channelid={`${channel.id}`}\n                className='channel-header alt a11y__region'\n                data-a11y-sort-order='8'\n            >\n                <div className='flex-parent'>\n                    <div className='flex-child'>\n                        <div\n                            id='channelHeaderInfo'\n                            className='channel-header__info'\n                        >\n                            <div\n                                className='channel-header__title dropdown'\n                            >\n                                <ChannelHeaderTitle\n                                    dmUser={dmUser}\n                                    gmMembers={gmMembers}\n                                />\n                                <div\n                                    className='channel-header__icons'\n                                >\n                                    {muteTrigger}\n                                    {memberListButton}\n                                    <HeaderIconWrapper\n                                        iconComponent={pinnedIcon}\n                                        buttonClass={pinnedIconClass}\n                                        buttonId={'channelHeaderPinButton'}\n                                        onClick={this.showPinnedPosts}\n                                        tooltip={this.props.intl.formatMessage({id: 'channel_header.pinnedPosts', defaultMessage: 'Pinned messages'})}\n                                    />\n                                    <HeaderIconWrapper\n                                        iconComponent={channelSearchIcon}\n                                        buttonClass={channelFilesIconClass}\n                                        buttonId={'channelHeaderSearchButton'}\n                                        onClick={() => {}}\n                                        tooltip={this.props.intl.formatMessage({id: 'channel_header.search', defaultMessage: 'Search'})}\n                                    />\n                                    <HeaderIconWrapper\n                                        iconComponent={channelMentionIcon}\n                                        buttonClass={channelFilesIconClass}\n                                        buttonId={'channelHeaderMentionhButton'}\n                                        onClick={() => {}}\n                                        tooltip={this.props.intl.formatMessage({id: 'channel_header.mention', defaultMessage: 'Mention'})}\n                                    />\n                                </div>\n                                {/* {headerTextContainer} */}\n                            </div>\n                        </div>\n                    </div>\n                    <ChannelHeaderPlug\n                        channel={channel}\n                        channelMember={channelMember}\n                    />\n                    <CallButton/>\n                    <HeaderIconWrapper\n                        iconComponent={<PhoneOutlineIcon\n                            color='#02B9B5'\n                            size={18}\n                        />}\n                        buttonId={'channelVoiceCallButton'}\n                        onClick={() => {}}\n                        tooltip={this.props.intl.formatMessage({id: 'channel_header.voice_call', defaultMessage: 'Voice Call'})}\n                    />\n                    <HeaderIconWrapper\n                        iconComponent={<CameraIcon/>}\n                        buttonId={'channelVideoCallButton'}\n                        onClick={() => {}}\n                        tooltip={this.props.intl.formatMessage({id: 'channel_header.video_call_btn', defaultMessage: 'Video Call'})}\n                    />\n                    <ChannelInfoButton channel={channel}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction CameraIcon() {\n    return (\n        <svg\n            width='23'\n            height='22'\n            viewBox='0 0 25 24'\n            fill='none'\n            xmlns='http://www.w3.org/2000/svg'\n        >\n            <g clipPath='url(#clip0_799_476)'>\n                <path\n                    d='M23.4286 6.85714L16.9286 11.5L23.4286 16.1429V6.85714Z'\n                    stroke='#02B9B5'\n                    strokeWidth='1.5'\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                />\n                <path\n                    d='M15.0714 5H4.85714C3.83147 5 3 5.83147 3 6.85714V16.1429C3 17.1685 3.83147 18 4.85714 18H15.0714C16.0971 18 16.9286 17.1685 16.9286 16.1429V6.85714C16.9286 5.83147 16.0971 5 15.0714 5Z'\n                    stroke='#02B9B5'\n                    strokeWidth='1.5'\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                />\n            </g>\n            <defs>\n                <clipPath>\n                    <rect\n                        width='22'\n                        height='15'\n                        fill='white'\n                        transform='translate(2 4)'\n                    />\n                </clipPath>\n            </defs>\n        </svg>\n    );\n}\n\nexport default injectIntl(ChannelHeader);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {bindActionCreators} from 'redux';\nimport type {Dispatch} from 'redux';\n\nimport {\n    updateChannelNotifyProps,\n} from 'mattermost-redux/actions/channels';\nimport {getCustomEmojisInText} from 'mattermost-redux/actions/emojis';\nimport {General} from 'mattermost-redux/constants';\nimport {\n    getCurrentChannel,\n    getMyCurrentChannelMembership,\n    isCurrentChannelMuted,\n    getCurrentChannelStats,\n} from 'mattermost-redux/selectors/entities/channels';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentRelativeTeamUrl, getCurrentTeamId, getMyTeams} from 'mattermost-redux/selectors/entities/teams';\nimport {\n    displayLastActiveLabel,\n    getCurrentUser,\n    getLastActiveTimestampUnits,\n    getLastActivityForUserId,\n    getUser,\n    makeGetProfilesInChannel,\n} from 'mattermost-redux/selectors/entities/users';\nimport {getUserIdFromChannelName} from 'mattermost-redux/utils/channel_utils';\n\nimport {goToLastViewedChannel} from 'actions/views/channel';\nimport {openModal, closeModal} from 'actions/views/modals';\nimport {\n    showPinnedPosts,\n    showChannelFiles,\n    closeRightHandSide,\n    showChannelMembers,\n} from 'actions/views/rhs';\nimport {getIsRhsOpen, getRhsState} from 'selectors/rhs';\nimport {getAnnouncementBarCount} from 'selectors/views/announcement_bar';\nimport {makeGetCustomStatus, isCustomStatusEnabled, isCustomStatusExpired} from 'selectors/views/custom_status';\nimport {isModalOpen} from 'selectors/views/modals';\n\nimport {ModalIdentifiers} from 'utils/constants';\nimport {isFileAttachmentsEnabled} from 'utils/file_utils';\n\nimport type {GlobalState} from 'types/store';\n\nimport ChannelHeader from './channel_header';\n\nfunction makeMapStateToProps() {\n    const doGetProfilesInChannel = makeGetProfilesInChannel();\n    const getCustomStatus = makeGetCustomStatus();\n    let timestampUnits: string[] = [];\n\n    return function mapStateToProps(state: GlobalState) {\n        const channel = getCurrentChannel(state);\n        const user = getCurrentUser(state);\n        const teams = getMyTeams(state);\n        const hasMoreThanOneTeam = teams.length > 1;\n        const config = getConfig(state);\n\n        let dmUser;\n        let gmMembers;\n        let customStatus;\n        let lastActivityTimestamp;\n\n        if (channel && channel.type === General.DM_CHANNEL) {\n            const dmUserId = getUserIdFromChannelName(user.id, channel.name);\n            dmUser = getUser(state, dmUserId);\n            customStatus = dmUser && getCustomStatus(state, dmUser.id);\n            lastActivityTimestamp = dmUser && getLastActivityForUserId(state, dmUser.id);\n        } else if (channel && channel.type === General.GM_CHANNEL) {\n            gmMembers = doGetProfilesInChannel(state, channel.id);\n        }\n        const stats = getCurrentChannelStats(state);\n\n        let isLastActiveEnabled = false;\n        if (dmUser) {\n            isLastActiveEnabled = displayLastActiveLabel(state, dmUser.id);\n            timestampUnits = getLastActiveTimestampUnits(state, dmUser.id);\n        }\n\n        return {\n            teamId: getCurrentTeamId(state),\n            channel,\n            channelMember: getMyCurrentChannelMembership(state),\n            memberCount: stats?.member_count || 0,\n            currentUser: user,\n            dmUser,\n            gmMembers,\n            rhsState: getRhsState(state),\n            rhsOpen: getIsRhsOpen(state),\n            isReadOnly: false,\n            isMuted: isCurrentChannelMuted(state),\n            isQuickSwitcherOpen: isModalOpen(state, ModalIdentifiers.QUICK_SWITCH),\n            hasGuests: stats ? stats.guest_count > 0 : false,\n            pinnedPostsCount: stats?.pinnedpost_count || 0,\n            hasMoreThanOneTeam,\n            currentRelativeTeamUrl: getCurrentRelativeTeamUrl(state),\n            announcementBarCount: getAnnouncementBarCount(state),\n            customStatus,\n            isCustomStatusEnabled: isCustomStatusEnabled(state),\n            isCustomStatusExpired: isCustomStatusExpired(state, customStatus),\n            lastActivityTimestamp,\n            isFileAttachmentsEnabled: isFileAttachmentsEnabled(config),\n            isLastActiveEnabled,\n            timestampUnits,\n            hideGuestTags: config.HideGuestTags === 'true',\n        };\n    };\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        showPinnedPosts,\n        showChannelFiles,\n        closeRightHandSide,\n        getCustomEmojisInText,\n        updateChannelNotifyProps,\n        goToLastViewedChannel,\n        openModal,\n        closeModal,\n        showChannelMembers,\n    }, dispatch),\n});\n\nexport default withRouter<any, any>(connect(makeMapStateToProps, mapDispatchToProps)(ChannelHeader));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = ownerWindow;\n\nvar _ownerDocument = _interopRequireDefault(require(\"./ownerDocument\"));\n\nfunction ownerWindow(node) {\n  var doc = (0, _ownerDocument.default)(node);\n  return doc && doc.defaultView || doc.parentWindow;\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = height;\n\nvar _offset = _interopRequireDefault(require(\"./offset\"));\n\nvar _isWindow = _interopRequireDefault(require(\"./isWindow\"));\n\nfunction height(node, client) {\n  var win = (0, _isWindow.default)(node);\n  return win ? win.innerHeight : client ? node.clientHeight : (0, _offset.default)(node).height;\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inDOM = _interopRequireDefault(require(\"./inDOM\"));\n\nvar vendors = ['', 'webkit', 'moz', 'o', 'ms'];\nvar cancel = 'clearTimeout';\nvar raf = fallback;\nvar compatRaf;\n\nvar getKey = function getKey(vendor, k) {\n  return vendor + (!vendor ? k : k[0].toUpperCase() + k.substr(1)) + 'AnimationFrame';\n};\n\nif (_inDOM.default) {\n  vendors.some(function (vendor) {\n    var rafKey = getKey(vendor, 'request');\n\n    if (rafKey in window) {\n      cancel = getKey(vendor, 'cancel');\n      return raf = function raf(cb) {\n        return window[rafKey](cb);\n      };\n    }\n  });\n}\n/* https://github.com/component/raf */\n\n\nvar prev = new Date().getTime();\n\nfunction fallback(fn) {\n  var curr = new Date().getTime(),\n      ms = Math.max(0, 16 - (curr - prev)),\n      req = setTimeout(fn, ms);\n  prev = curr;\n  return req;\n}\n\ncompatRaf = function compatRaf(cb) {\n  return raf(cb);\n};\n\ncompatRaf.cancel = function (id) {\n  window[cancel] && typeof window[cancel] === 'function' && window[cancel](id);\n};\n\nvar _default = compatRaf;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _height = require('dom-helpers/query/height');\n\nvar _height2 = _interopRequireDefault(_height);\n\nvar _offset = require('dom-helpers/query/offset');\n\nvar _offset2 = _interopRequireDefault(_offset);\n\nvar _offsetParent = require('dom-helpers/query/offsetParent');\n\nvar _offsetParent2 = _interopRequireDefault(_offsetParent);\n\nvar _scrollTop = require('dom-helpers/query/scrollTop');\n\nvar _scrollTop2 = _interopRequireDefault(_scrollTop);\n\nvar _requestAnimationFrame = require('dom-helpers/util/requestAnimationFrame');\n\nvar _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _addEventListener = require('./utils/addEventListener');\n\nvar _addEventListener2 = _interopRequireDefault(_addEventListener);\n\nvar _getDocumentHeight = require('./utils/getDocumentHeight');\n\nvar _getDocumentHeight2 = _interopRequireDefault(_getDocumentHeight);\n\nvar _ownerDocument = require('./utils/ownerDocument');\n\nvar _ownerDocument2 = _interopRequireDefault(_ownerDocument);\n\nvar _ownerWindow = require('./utils/ownerWindow');\n\nvar _ownerWindow2 = _interopRequireDefault(_ownerWindow);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * The `<Affix/>` component toggles `position: fixed;` on and off, emulating\n * the effect found with `position: sticky;`.\n */\nvar Affix = function (_React$Component) {\n  _inherits(Affix, _React$Component);\n\n  function Affix(props, context) {\n    _classCallCheck(this, Affix);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.onWindowScroll = function () {\n      _this.onUpdate();\n    };\n\n    _this.onDocumentClick = function () {\n      (0, _requestAnimationFrame2.default)(function () {\n        return _this.onUpdate();\n      });\n    };\n\n    _this.onUpdate = function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          offsetTop = _this$props.offsetTop,\n          viewportOffsetTop = _this$props.viewportOffsetTop;\n\n      var scrollTop = (0, _scrollTop2.default)((0, _ownerWindow2.default)(_this));\n      var positionTopMin = scrollTop + (viewportOffsetTop || 0);\n\n      if (positionTopMin <= offsetTop) {\n        _this.updateState('top', null, null);\n        return;\n      }\n\n      if (positionTopMin > _this.getPositionTopMax()) {\n        if (_this.state.affixed === 'bottom') {\n          _this.updateStateAtBottom();\n        } else {\n          // Setting position away from `fixed` can change the offset parent of\n          // the affix, so we can't calculate the correct position until after\n          // we've updated its position.\n          _this.setState({\n            affixed: 'bottom',\n            position: 'absolute',\n            top: null\n          }, function () {\n            if (!_this._isMounted) {\n              return;\n            }\n\n            _this.updateStateAtBottom();\n          });\n        }\n        return;\n      }\n\n      _this.updateState('affix', 'fixed', viewportOffsetTop);\n    };\n\n    _this.getPositionTopMax = function () {\n      var documentHeight = (0, _getDocumentHeight2.default)((0, _ownerDocument2.default)(_this));\n      var height = (0, _height2.default)(_reactDom2.default.findDOMNode(_this));\n\n      return documentHeight - height - _this.props.offsetBottom;\n    };\n\n    _this.updateState = function (affixed, position, top) {\n      if (affixed === _this.state.affixed && position === _this.state.position && top === _this.state.top) {\n        return;\n      }\n\n      var upperName = affixed === 'affix' ? '' : affixed.charAt(0).toUpperCase() + affixed.substr(1);\n\n      if (_this.props['onAffix' + upperName]) {\n        _this.props['onAffix' + upperName]();\n      }\n\n      _this.setState({ affixed: affixed, position: position, top: top }, function () {\n        if (_this.props['onAffixed' + upperName]) {\n          _this.props['onAffixed' + upperName]();\n        }\n      });\n    };\n\n    _this.updateStateAtBottom = function () {\n      var positionTopMax = _this.getPositionTopMax();\n      var offsetParent = (0, _offsetParent2.default)(_reactDom2.default.findDOMNode(_this));\n      var parentTop = (0, _offset2.default)(offsetParent).top;\n\n      _this.updateState('bottom', 'absolute', positionTopMax - parentTop);\n    };\n\n    _this.state = {\n      affixed: 'top',\n      position: null,\n      top: null\n    };\n\n    _this._needPositionUpdate = false;\n    return _this;\n  }\n\n  Affix.prototype.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this._isMounted = true;\n\n    this._windowScrollListener = (0, _addEventListener2.default)((0, _ownerWindow2.default)(this), 'scroll', function () {\n      return _this2.onWindowScroll();\n    });\n    this._documentClickListener = (0, _addEventListener2.default)((0, _ownerDocument2.default)(this), 'click', function () {\n      return _this2.onDocumentClick();\n    });\n\n    this.onUpdate();\n  };\n\n  Affix.prototype.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps() {\n    this._needPositionUpdate = true;\n  };\n\n  Affix.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this._needPositionUpdate) {\n      this._needPositionUpdate = false;\n      this.onUpdate();\n    }\n  };\n\n  Affix.prototype.componentWillUnmount = function componentWillUnmount() {\n    this._isMounted = false;\n\n    if (this._windowScrollListener) {\n      this._windowScrollListener.remove();\n    }\n    if (this._documentClickListener) {\n      this._documentClickListener.remove();\n    }\n  };\n\n  Affix.prototype.render = function render() {\n    var child = _react2.default.Children.only(this.props.children);\n    var _child$props = child.props,\n        className = _child$props.className,\n        style = _child$props.style;\n    var _state = this.state,\n        affixed = _state.affixed,\n        position = _state.position,\n        top = _state.top;\n\n    var positionStyle = { position: position, top: top };\n\n    var affixClassName = void 0;\n    var affixStyle = void 0;\n    if (affixed === 'top') {\n      affixClassName = this.props.topClassName;\n      affixStyle = this.props.topStyle;\n    } else if (affixed === 'bottom') {\n      affixClassName = this.props.bottomClassName;\n      affixStyle = this.props.bottomStyle;\n    } else {\n      affixClassName = this.props.affixClassName;\n      affixStyle = this.props.affixStyle;\n    }\n\n    return _react2.default.cloneElement(child, {\n      className: (0, _classnames2.default)(affixClassName, className),\n      style: _extends({}, positionStyle, affixStyle, style)\n    });\n  };\n\n  return Affix;\n}(_react2.default.Component);\n\nAffix.propTypes = {\n  /**\n   * Pixels to offset from top of screen when calculating position\n   */\n  offsetTop: _propTypes2.default.number,\n\n  /**\n   * When affixed, pixels to offset from top of viewport\n   */\n  viewportOffsetTop: _propTypes2.default.number,\n\n  /**\n   * Pixels to offset from bottom of screen when calculating position\n   */\n  offsetBottom: _propTypes2.default.number,\n\n  /**\n   * CSS class or classes to apply when at top\n   */\n  topClassName: _propTypes2.default.string,\n\n  /**\n   * Style to apply when at top\n   */\n  topStyle: _propTypes2.default.object,\n\n  /**\n   * CSS class or classes to apply when affixed\n   */\n  affixClassName: _propTypes2.default.string,\n\n  /**\n   * Style to apply when affixed\n   */\n  affixStyle: _propTypes2.default.object,\n\n  /**\n   * CSS class or classes to apply when at bottom\n   */\n  bottomClassName: _propTypes2.default.string,\n\n  /**\n   * Style to apply when at bottom\n   */\n  bottomStyle: _propTypes2.default.object,\n\n  /**\n   * Callback fired right before the `affixStyle` and `affixClassName` props are rendered\n   */\n  onAffix: _propTypes2.default.func,\n\n  /**\n   * Callback fired after the component `affixStyle` and `affixClassName` props have been rendered\n   */\n  onAffixed: _propTypes2.default.func,\n\n  /**\n   * Callback fired right before the `topStyle` and `topClassName` props are rendered\n   */\n  onAffixTop: _propTypes2.default.func,\n\n  /**\n   * Callback fired after the component `topStyle` and `topClassName` props have been rendered\n   */\n  onAffixedTop: _propTypes2.default.func,\n\n  /**\n   * Callback fired right before the `bottomStyle` and `bottomClassName` props are rendered\n   */\n  onAffixBottom: _propTypes2.default.func,\n\n  /**\n   * Callback fired after the component `bottomStyle` and `bottomClassName` props have been rendered\n   */\n  onAffixedBottom: _propTypes2.default.func\n};\n\nAffix.defaultProps = {\n  offsetTop: 0,\n  viewportOffsetTop: null,\n  offsetBottom: 0\n};\n\nexports.default = Affix;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _offset = require('dom-helpers/query/offset');\n\nvar _offset2 = _interopRequireDefault(_offset);\n\nvar _requestAnimationFrame = require('dom-helpers/util/requestAnimationFrame');\n\nvar _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _componentOrElement = require('prop-types-extra/lib/componentOrElement');\n\nvar _componentOrElement2 = _interopRequireDefault(_componentOrElement);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Affix = require('./Affix');\n\nvar _Affix2 = _interopRequireDefault(_Affix);\n\nvar _addEventListener = require('./utils/addEventListener');\n\nvar _addEventListener2 = _interopRequireDefault(_addEventListener);\n\nvar _getContainer = require('./utils/getContainer');\n\nvar _getContainer2 = _interopRequireDefault(_getContainer);\n\nvar _getDocumentHeight = require('./utils/getDocumentHeight');\n\nvar _getDocumentHeight2 = _interopRequireDefault(_getDocumentHeight);\n\nvar _ownerDocument = require('./utils/ownerDocument');\n\nvar _ownerDocument2 = _interopRequireDefault(_ownerDocument);\n\nvar _ownerWindow = require('./utils/ownerWindow');\n\nvar _ownerWindow2 = _interopRequireDefault(_ownerWindow);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar displayName = 'AutoAffix';\n\nvar propTypes = _extends({}, _Affix2.default.propTypes, {\n  /**\n   * The logical container node or component for determining offset from bottom\n   * of viewport, or a function that returns it\n   */\n  container: _propTypes2.default.oneOfType([_componentOrElement2.default, _propTypes2.default.func]),\n  /**\n   * Automatically set width when affixed\n   */\n  autoWidth: _propTypes2.default.bool\n});\n\n// This intentionally doesn't inherit default props from `<Affix>`, so that the\n// auto-calculated offsets can apply.\nvar defaultProps = {\n  viewportOffsetTop: 0,\n  autoWidth: true\n};\n\n/**\n * The `<AutoAffix/>` component wraps `<Affix/>` to automatically calculate\n * offsets in many common cases.\n */\n\nvar AutoAffix = function (_React$Component) {\n  _inherits(AutoAffix, _React$Component);\n\n  function AutoAffix(props, context) {\n    _classCallCheck(this, AutoAffix);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.onWindowScroll = function () {\n      _this.onUpdate();\n    };\n\n    _this.onWindowResize = function () {\n      if (_this.props.autoWidth) {\n        (0, _requestAnimationFrame2.default)(function () {\n          return _this.onUpdate();\n        });\n      }\n    };\n\n    _this.onDocumentClick = function () {\n      (0, _requestAnimationFrame2.default)(function () {\n        return _this.onUpdate();\n      });\n    };\n\n    _this.onUpdate = function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var _getOffset = (0, _offset2.default)(_this.positioner),\n          offsetTop = _getOffset.top,\n          width = _getOffset.width;\n\n      var container = (0, _getContainer2.default)(_this.props.container);\n      var offsetBottom = void 0;\n      if (container) {\n        var documentHeight = (0, _getDocumentHeight2.default)((0, _ownerDocument2.default)(_this));\n\n        var _getOffset2 = (0, _offset2.default)(container),\n            top = _getOffset2.top,\n            height = _getOffset2.height;\n\n        offsetBottom = documentHeight - top - height;\n      } else {\n        offsetBottom = null;\n      }\n\n      _this.updateState(offsetTop, offsetBottom, width);\n    };\n\n    _this.updateState = function (offsetTop, offsetBottom, width) {\n      if (offsetTop === _this.state.offsetTop && offsetBottom === _this.state.offsetBottom && width === _this.state.width) {\n        return;\n      }\n\n      _this.setState({ offsetTop: offsetTop, offsetBottom: offsetBottom, width: width });\n    };\n\n    _this.state = {\n      offsetTop: null,\n      offsetBottom: null,\n      width: null\n    };\n    return _this;\n  }\n\n  AutoAffix.prototype.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this._isMounted = true;\n\n    this._windowScrollListener = (0, _addEventListener2.default)((0, _ownerWindow2.default)(this), 'scroll', function () {\n      return _this2.onWindowScroll();\n    });\n\n    this._windowResizeListener = (0, _addEventListener2.default)((0, _ownerWindow2.default)(this), 'resize', function () {\n      return _this2.onWindowResize();\n    });\n\n    this._documentClickListener = (0, _addEventListener2.default)((0, _ownerDocument2.default)(this), 'click', function () {\n      return _this2.onDocumentClick();\n    });\n\n    this.onUpdate();\n  };\n\n  AutoAffix.prototype.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps() {\n    this._needPositionUpdate = true;\n  };\n\n  AutoAffix.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this._needPositionUpdate) {\n      this._needPositionUpdate = false;\n      this.onUpdate();\n    }\n  };\n\n  AutoAffix.prototype.componentWillUnmount = function componentWillUnmount() {\n    this._isMounted = false;\n\n    if (this._windowScrollListener) {\n      this._windowScrollListener.remove();\n    }\n    if (this._documentClickListener) {\n      this._documentClickListener.remove();\n    }\n    if (this._windowResizeListener) {\n      this._windowResizeListener.remove();\n    }\n  };\n\n  AutoAffix.prototype.render = function render() {\n    var _this3 = this;\n\n    var _props = this.props,\n        autoWidth = _props.autoWidth,\n        viewportOffsetTop = _props.viewportOffsetTop,\n        children = _props.children,\n        props = _objectWithoutProperties(_props, ['autoWidth', 'viewportOffsetTop', 'children']);\n\n    var _state = this.state,\n        offsetTop = _state.offsetTop,\n        offsetBottom = _state.offsetBottom,\n        width = _state.width;\n\n\n    delete props.container;\n\n    var effectiveOffsetTop = Math.max(offsetTop, viewportOffsetTop || 0);\n\n    var _props2 = this.props,\n        affixStyle = _props2.affixStyle,\n        bottomStyle = _props2.bottomStyle;\n\n    if (autoWidth) {\n      affixStyle = _extends({ width: width }, affixStyle);\n      bottomStyle = _extends({ width: width }, bottomStyle);\n    }\n\n    return _react2.default.createElement(\n      'div',\n      null,\n      _react2.default.createElement('div', { ref: function ref(c) {\n          _this3.positioner = c;\n        } }),\n      _react2.default.createElement(\n        _Affix2.default,\n        _extends({}, props, {\n          offsetTop: effectiveOffsetTop,\n          viewportOffsetTop: viewportOffsetTop,\n          offsetBottom: offsetBottom,\n          affixStyle: affixStyle,\n          bottomStyle: bottomStyle\n        }),\n        children\n      )\n    );\n  };\n\n  return AutoAffix;\n}(_react2.default.Component);\n\nAutoAffix.displayName = displayName;\nAutoAffix.propTypes = propTypes;\nAutoAffix.defaultProps = defaultProps;\n\nexports.default = AutoAffix;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\nexports.RootCloseWrapper = exports.Position = exports.Portal = exports.Overlay = exports.Modal = exports.AutoAffix = exports.Affix = undefined;\n\nvar _Affix2 = require('./Affix');\n\nvar _Affix3 = _interopRequireDefault(_Affix2);\n\nvar _AutoAffix2 = require('./AutoAffix');\n\nvar _AutoAffix3 = _interopRequireDefault(_AutoAffix2);\n\nvar _Modal2 = require('./Modal');\n\nvar _Modal3 = _interopRequireDefault(_Modal2);\n\nvar _Overlay2 = require('./Overlay');\n\nvar _Overlay3 = _interopRequireDefault(_Overlay2);\n\nvar _Portal2 = require('./Portal');\n\nvar _Portal3 = _interopRequireDefault(_Portal2);\n\nvar _Position2 = require('./Position');\n\nvar _Position3 = _interopRequireDefault(_Position2);\n\nvar _RootCloseWrapper2 = require('./RootCloseWrapper');\n\nvar _RootCloseWrapper3 = _interopRequireDefault(_RootCloseWrapper2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Affix = _Affix3.default;\nexports.AutoAffix = _AutoAffix3.default;\nexports.Modal = _Modal3.default;\nexports.Overlay = _Overlay3.default;\nexports.Portal = _Portal3.default;\nexports.Position = _Position3.default;\nexports.RootCloseWrapper = _RootCloseWrapper3.default;","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (doc) {\n  return Math.max(doc.documentElement.offsetHeight || 0, doc.height || 0, doc.body.scrollHeight || 0, doc.body.offsetHeight || 0);\n};\n\nmodule.exports = exports[\"default\"]; /**\n                                      * Get the height of the document\n                                      *\n                                      * @returns {documentHeight: number}\n                                      */","'use strict';\n\nexports.__esModule = true;\n\nexports.default = function (componentOrElement) {\n  return (0, _ownerWindow2.default)(_reactDom2.default.findDOMNode(componentOrElement));\n};\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _ownerWindow = require('dom-helpers/ownerWindow');\n\nvar _ownerWindow2 = _interopRequireDefault(_ownerWindow);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];"],"names":["connect","state","currentChannel","getCurrentChannel","pluginCallComponents","plugins","components","CallButton","channelMember","getMyCurrentChannelMembership","sidebarOpen","views","rhs","isSidebarOpen","_ref","active","setActive","useState","clickEnabled","setClickEnabled","prevSidebarOpen","useRef","formatMessage","useIntl","useEffect","current","setTimeout","Constants","length","style","container","marginTop","height","item","clickHandler","_item$action","action","call","React","className","onClick","undefined","onTouchEnd","button","items","map","key","id","e","_item$action2","preventDefault","dropdownButton","MenuWrapper","onToggle","toggle","classNames","PhoneOutlineIcon","color","defaultMessage","toLowerCase","ChevronDownIcon","Menu","ariaLabel","customStyles","top","left","right","PluginChannelHeaderIcon","props","width","viewBox","version","role","d","CustomMenu","constructor","arguments","_defineProperty","this","onClose","render","open","rootCloseEvent","children","RootCloseWrapper","disabled","onRootClose","handleRootClose","event","_pt","bsRole","CustomToggle","activeClass","dropdownOpen","type","handleClick","ChannelHeaderPlug","super","setState","toggleDropdown","disableButtonsClosingRHS","channel","plug","_plug$tooltipText","tooltipToAriaLabelHack","intl","stringOrElement","FormattedMessage","value","tooltipText","dropdownText","HeaderIconWrapper","buttonClass","iconComponent","icon","fireAction","buttonId","tooltip","ariaLabelOverride","pluginId","async","context","createCallContext","binding","app_id","location","team_id","res","actions","handleBindingClick","error","errorResponse","errorMessage","text","postEphemeralCallResponseForChannel","callResp","data","AppCallResponseTypes","form","openAppsModal","concat","src","onBindingClick","label","plugs","appBindings","componentItems","filter","href","fireActionAndClose","appsEnabled","Dropdown","WithTooltip","placement","title","componentDidUpdate","prevProps","shouldShowAppBar","componentButtons","createComponentButton","createAppBindingButton","createDropdown","isRequired","injectIntl","apps","getChannelHeaderPluginComponents","getChannelHeaderAppBindings","appBarEnabled","theme","getTheme","dispatch","bindActionCreators","ChannelHeaderTitleDirect","_dmUser$roles","dmUser","currentUser","useSelector","getCurrentUser","teammateNameDisplaySetting","getTeammateNameDisplaySetting","displayName","displayUsername","values","isGuest","roles","GuestTag","memo","ChannelHeaderTitleFavorite","_channel$delete_at","useDispatch","isFavorite","isCurrentChannelFavorite","channelIsArchived","delete_at","toggleFavoriteCallback","useCallback","stopPropagation","unfavoriteChannel","favoriteChannel","inactive","ChannelHeaderTitleGroup","gmMembers","membersMap","user","userDisplayName","push","displayNames","display_name","split","index","_user$roles","shift","propTypes","ChannelHeaderTitle","titleMenuOpen","setTitleMenuOpen","showTooltip","setShowTooltip","headerItemRef","isRHSOpen","getIsRhsOpen","enableToolTipIfNeeded","handleResize","window","addEventListener","removeEventListener","element","isTooltip","offsetWidth","scrollWidth","isDirect","isGroup","archivedIcon","ArchiveIcon","sharedIcon","shared","SharedChannelIndicator","channelType","withTooltip","channelTitle","is_bot","ProfilePicture","Client4","last_picture_update","size","BotTag","status","ref","ChannelHeaderDropdown","Icon","styled","_StyledIcon","withConfig","rhsState","getRhsState","isRhsOpen","isChannelInfo","RHSStates","buttonActive","toggleRHS","closeRightHandSide","showChannelInfo","headerMarkdownOptions","singleline","mentionHighlight","atMentions","popoverMarkdownOptions","ChannelHeader","goToLastViewedChannel","options","mark_unread","NotificationLevels","updateChannelNotifyProps","showPinnedPosts","showChannelFiles","headerOverlayRef","hide","modalData","modalId","ModalIdentifiers","dialogType","EditChannelHeaderModal","dialogProps","openModal","headerText","_this$headerDescripti","_this$headerPopoverTe","_this$headerDescripti2","headerDescriptionRect","headerDescriptionRef","getBoundingClientRect","headerPopoverTextMeasurerRect","headerPopoverTextMeasurerRef","match","leftOffset","hasMoreThanOneTeam","showChannelHeaderPopover","topOffset","announcementBarCount","channelHeaderPoverWidth","clientWidth","showChannelMembers","handleFormattedTextClick","currentRelativeTeamUrl","_this$props$dmUser","customStatus","isCustomStatusEnabled","isCustomStatusExpired","isStatusSet","emoji","CustomStatusEmoji","userID","tooltipDirection","emojiStyle","verticalAlign","margin","CustomStatusText","toggleFavoriteRef","getHeaderMarkdownOptions","memoizeResult","channelNamesMap","_objectSpread","getPopoverMarkdownOptions","componentDidMount","getCustomEmojisInText","header","teamId","isMuted","channelMuted","isReadOnly","hasGuests","hideGuestTags","ariaLabelChannelHeader","hasGuestsText","tabIndex","isEmptyObject","channel_mentions","isPrivate","dmHeaderTextStatus","renderCustomStatus","isLastActiveEnabled","lastActivityTimestamp","timestampUnits","timestamp","Timestamp","units","useTime","channelFilesIconClass","channelSearchIcon","channelMentionIcon","pinnedIconClass","pinnedIcon","pinnedPostsCount","headerTextContainer","memberListButton","membersIconClass","membersIcon","memberCount","toggleChannelMembersRHS","bot_description","imageProps","hideUtilities","popoverContent","Popover","popoverStyle","popoverSize","transform","maxWidth","Markdown","message","dir","replace","onMouseOver","onMouseOut","Overlay","show","rootClose","target","onHide","editMessage","showEditChannelHeaderModal","ChannelPermissionGate","channelId","permissions","Permissions","muteTrigger","unmute","CameraIcon","ChannelInfoButton","fill","xmlns","clipPath","stroke","strokeWidth","strokeLinecap","strokeLinejoin","withRouter","doGetProfilesInChannel","makeGetProfilesInChannel","getCustomStatus","makeGetCustomStatus","getMyTeams","config","getConfig","General","dmUserId","getUserIdFromChannelName","name","getUser","getLastActivityForUserId","stats","getCurrentChannelStats","displayLastActiveLabel","getLastActiveTimestampUnits","getCurrentTeamId","member_count","rhsOpen","isCurrentChannelMuted","isQuickSwitcherOpen","isModalOpen","guest_count","pinnedpost_count","getCurrentRelativeTeamUrl","getAnnouncementBarCount","isFileAttachmentsEnabled","HideGuestTags","closeModal","_interopRequireDefault","exports","__esModule","node","doc","_ownerDocument","default","defaultView","parentWindow","module","client","win","_isWindow","innerHeight","clientHeight","_offset","compatRaf","_inDOM","cancel","raf","fn","curr","Date","getTime","ms","Math","max","prev","req","getKey","vendor","k","toUpperCase","substr","some","rafKey","cb","_default","_extends","Object","assign","i","source","prototype","hasOwnProperty","_classnames2","_height2","_offset2","_offsetParent2","_scrollTop2","_requestAnimationFrame2","_propTypes2","_react2","_reactDom2","_addEventListener2","_getDocumentHeight2","_ownerDocument2","_ownerWindow2","obj","Affix","_React$Component","instance","Constructor","TypeError","_classCallCheck","_this","self","ReferenceError","_possibleConstructorReturn","onWindowScroll","onUpdate","onDocumentClick","_isMounted","_this$props","offsetTop","viewportOffsetTop","positionTopMin","updateState","getPositionTopMax","affixed","updateStateAtBottom","position","findDOMNode","offsetBottom","upperName","charAt","positionTopMax","offsetParent","parentTop","_needPositionUpdate","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","_this2","_windowScrollListener","_documentClickListener","UNSAFE_componentWillReceiveProps","componentWillUnmount","remove","child","Children","only","_child$props","_state","positionStyle","affixClassName","affixStyle","topClassName","topStyle","bottomClassName","bottomStyle","cloneElement","Component","number","string","object","onAffix","func","onAffixed","onAffixTop","onAffixedTop","onAffixBottom","onAffixedBottom","defaultProps","_componentOrElement2","_Affix2","_getContainer2","oneOfType","autoWidth","bool","AutoAffix","onWindowResize","_getOffset","positioner","documentHeight","_getOffset2","_windowResizeListener","_this3","_props","keys","indexOf","_objectWithoutProperties","effectiveOffsetTop","_props2","createElement","c","_Affix3","_AutoAffix3","_Modal3","_Overlay3","_Portal3","_Position3","_RootCloseWrapper3","documentElement","offsetHeight","body","scrollHeight","componentOrElement"],"sourceRoot":""}