{"version":3,"file":"4231.bd31438dc8be1b5f47dc.js","mappings":"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","sources":["webpack://mattermost-webapp/./src/components/header_footer_route/footer.tsx","webpack://mattermost-webapp/./src/components/password_reset_send_link/password_reset_send_link.tsx","webpack://mattermost-webapp/./src/components/password_reset_send_link/index.ts"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\nimport {useSelector} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport ExternalLink from 'components/external_link';\n\nimport Logo from 'images/infogito.png';\n\nimport './footer.scss';\n\nconst Footer = () => {\n    const {formatMessage} = useIntl();\n\n    const {AboutLink, PrivacyPolicyLink, TermsOfServiceLink, HelpLink} = useSelector(getConfig);\n\n    return (\n        <div className='hfroute-footer'>\n            <img\n                src={Logo}\n                className='footer_logo'\n            />\n\n            <span\n                key='footer-copyright'\n                className='footer-copyright'\n            >\n                {`Â© ${new Date().getFullYear()} Infogito. All Rights Reserved.`}\n            </span>\n            {AboutLink && (\n                <ExternalLink\n                    key='footer-link-about'\n                    className='footer-link'\n                    href={AboutLink}\n                    location='footer'\n                >\n                    {formatMessage({id: 'web.footer.about', defaultMessage: 'About'})}\n                </ExternalLink>\n            )}\n            {PrivacyPolicyLink && (\n                <ExternalLink\n                    key='footer-link-privacy'\n                    className='footer-link'\n                    href={PrivacyPolicyLink}\n                    location='footer'\n                >\n                    {formatMessage({id: 'web.footer.privacy', defaultMessage: 'Privacy Policy'})}\n                </ExternalLink>\n            )}\n            {TermsOfServiceLink && (\n                <ExternalLink\n                    key='footer-link-terms'\n                    className='footer-link'\n                    href={TermsOfServiceLink}\n                    location='footer'\n                >\n                    {formatMessage({id: 'web.footer.terms', defaultMessage: 'Terms'})}\n                </ExternalLink>\n            )}\n            {HelpLink && (\n                <ExternalLink\n                    key='footer-link-help'\n                    className='footer-link'\n                    href={HelpLink}\n                    location='footer'\n                >\n                    {formatMessage({id: 'web.footer.help', defaultMessage: 'Help'})}\n                </ExternalLink>\n            )}\n        </div>\n    );\n};\n\nexport default Footer;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage, injectIntl, type IntlShape} from 'react-intl';\n\nimport type {ActionResult} from 'mattermost-redux/types/actions';\nimport {isEmail} from 'mattermost-redux/utils/helpers';\n\n\nimport './password_reset_send_link.scss'\nimport Footer from 'components/header_footer_route/footer';\nimport { Link } from 'react-router-dom';\n\nexport interface Props {\n    actions: {\n        sendPasswordResetEmail: (email: string) => Promise<ActionResult>;\n    };\n    intl: IntlShape;\n}\n\ninterface State {\n    error: React.ReactNode;\n    updateText: React.ReactNode;\n}\n\nexport class PasswordResetSendLink extends React.PureComponent<Props, State> {\n    state = {\n        error: null,\n        updateText: null,\n    };\n    resetForm = React.createRef<HTMLFormElement>();\n    emailInput = React.createRef<HTMLInputElement>();\n\n    handleSendLink = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n        const email = this.emailInput.current!.value.trim().toLowerCase();\n        if (!email || !isEmail(email)) {\n            this.setState({\n                error: (\n                    <FormattedMessage\n                        id='password_send.error'\n                        defaultMessage='Please enter a valid email address.'\n                    />\n                ),\n            });\n            return;\n        }\n\n        // End of error checking clear error\n        this.setState({error: null});\n\n        const {data, error} = await this.props.actions.sendPasswordResetEmail(email);\n        if (data) {\n            this.setState({\n                error: null,\n                updateText: (\n                    <div\n                        id='passwordResetEmailSent'\n                        className='reset-form alert alert-success'\n                    >\n                        <FormattedMessage\n                            id='password_send.link'\n                            defaultMessage='If the account exists, a password reset email will be sent to:'\n                        />\n                        <div>\n                            <b>{email}</b>\n                        </div>\n                        <br/>\n                        <FormattedMessage\n                            id='password_send.checkInbox'\n                            defaultMessage='Please check your inbox.'\n                        />\n                    </div>\n                ),\n            });\n            if (this.resetForm.current) {\n                this.resetForm.current.hidden = true;\n            }\n        } else if (error) {\n            this.setState({\n                error: error.message,\n                updateText: null,\n            });\n        }\n    };\n\n    render() {\n        let error = null;\n        if (this.state.error) {\n            error = (\n                <div className='form-group has-error'>\n                    <label className='control-label'>{this.state.error}</label>\n                </div>\n            );\n        }\n\n        let formClass = 'form-group';\n        if (error) {\n            formClass += ' has-error';\n        }\n\n        return (\n            <div className='get-app'>\n\n                <div className='col-sm-12 card_center'>\n                \n                    <div className=' reset-password_link-body-card'>\n                    <p className='dont_p_RESET'>Don't have an account? <Link to={'/signup_user_complete'} className='signup_p'>Sign Up</Link></p>\n                    {error}\n\n                       <div className=''>\n                       <FormattedMessage\n                            id='password_send.title'\n                            tagName='h1'\n                            defaultMessage='Password Reset'\n                        />\n                        {this.state.updateText}\n                        <form\n                            onSubmit={this.handleSendLink}\n                            ref={this.resetForm}\n                        >\n                            <p>\n                                <FormattedMessage\n                                    id='password_send.description'\n                                    defaultMessage='To reset your password, enter the email address you used to sign up'\n                                />\n                            </p>\n                            <div className={formClass}>\n                                <input\n                                    id='passwordResetEmailInput'\n                                    type='email'\n                                    className='form-control reset_input'\n                                    name='email'\n                                    placeholder={this.props.intl.formatMessage({\n                                        id: 'password_send.email',\n                                        defaultMessage: 'Email',\n                                    })}\n                                    ref={this.emailInput}\n                                    spellCheck='false'\n                                    autoFocus={true}\n                                />\n                            </div>\n                            <button\n                                id='passwordResetButton'\n                                type='submit'\n                                className='btn btn-primary reset_my_password ' \n                            >\n                                <FormattedMessage\n                                    id='password_send.reset'\n                                    defaultMessage='Reset my password'\n                                />\n                            </button>\n                        </form>\n                       </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default injectIntl(PasswordResetSendLink);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport type {Dispatch} from 'redux';\n\nimport {sendPasswordResetEmail} from 'mattermost-redux/actions/users';\n\nimport PasswordResetSendLink from './password_reset_send_link';\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    actions: bindActionCreators({\n        sendPasswordResetEmail,\n    }, dispatch),\n});\n\nexport default connect(null, mapDispatchToProps)(PasswordResetSendLink);\n"],"names":["Footer","formatMessage","useIntl","AboutLink","PrivacyPolicyLink","TermsOfServiceLink","HelpLink","useSelector","getConfig","React","className","src","Logo","key","concat","Date","getFullYear","ExternalLink","href","location","id","defaultMessage","PasswordResetSendLink","constructor","arguments","_defineProperty","error","updateText","async","e","preventDefault","email","this","emailInput","current","value","trim","toLowerCase","isEmail","setState","FormattedMessage","data","props","actions","sendPasswordResetEmail","resetForm","hidden","message","render","state","formClass","Link","to","tagName","onSubmit","handleSendLink","ref","type","name","placeholder","intl","spellCheck","autoFocus","_pt","isRequired","injectIntl","connect","dispatch","bindActionCreators"],"sourceRoot":""}