{"version":3,"file":"353.9404a5a3e40a2b46c255.js","mappings":"qRA0BA,SAASA,EAA4BC,GAAuD,IAAtD,OAACC,EAAM,SAAEC,EAAQ,SAAEC,EAAQ,OAAEC,EAAM,QAAEC,GAAeL,EACtF,MAAMM,GAAcC,EAAAA,EAAAA,IAA4BL,GAC1CM,GAAsBC,EAAAA,EAAAA,GAAeH,IAEpCI,EAAoBC,IAAyBC,EAAAA,EAAAA,UAASJ,GAEvDK,GAAgBC,EAAAA,EAAAA,cAAY,KAC9BT,EAAQU,gBAAgBd,EAAQG,GAAQY,EAAAA,EAAAA,IAAUN,EAAmBO,UAAU,GAChF,CAACP,KAEGQ,EAAkBC,IAAuBP,EAAAA,EAAAA,WAAS,IAEnD,cAACQ,IAAiBC,EAAAA,EAAAA,WAgBxB,OAdAC,EAAAA,EAAAA,YAAU,KACN,SAASC,EAAcC,IACfC,EAAAA,EAAAA,GAAaD,EAAOE,EAAAA,QAAAA,SAAAA,UAA+BR,GACnDf,GAER,CAIA,OAFAwB,SAASC,iBAAiB,UAAWL,GAE9B,KACHI,SAASE,oBAAoB,UAAWN,EAAc,CACzD,GACF,CAACL,IAGAY,IAAAA,cAACC,EAAAA,GAAY,CACTC,GAAG,oCACHC,UAAWb,EAAc,CAACY,GAAI,oDAAqDE,eAAgB,mBACnG/B,SAAUA,EACVgC,gBACIL,IAAAA,cAACM,EAAAA,iBAAgB,CACbJ,GAAG,gDACHE,eAAe,mBAGvBG,kBACIP,IAAAA,cAACM,EAAAA,iBAAgB,CACbJ,GAAG,uDACHE,eAAe,iBAGvBrB,cAAeA,EACfyB,oBAAqBzB,EACrB0B,UAAW,sBACXC,eAAe,EACfC,gBAAgB,GAEhBX,IAAAA,cAACY,EAAAA,EAAa,CACVC,KAAMjC,EACNkC,aAAcjC,EACdT,SAAUA,EACViB,oBAAqBA,IAIrC,CAACpB,EAAA8C,UAAA,CAlEG1C,SAAQ2C,IAAAA,KAAAA,WACR1C,OAAM0C,IAAAA,OAAAA,WACNzC,QAAOyC,IAAAA,MAAA,CACH/B,gBAAe+B,IAAAA,KAAAA,aAAAC,YAiEvB,S","sources":["webpack://mattermost-webapp/./src/components/post_reminder_custom_time_picker_modal/post_reminder_custom_time_picker_modal.tsx"],"sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {FormattedMessage, useIntl} from 'react-intl';\n\nimport {GenericModal} from '@mattermost/components';\n\nimport DateTimeInput, {getRoundedTime} from 'components/custom_status/date_time_input';\n\nimport Constants from 'utils/constants';\nimport {toUTCUnix} from 'utils/datetime';\nimport {isKeyPressed} from 'utils/keyboard';\nimport {getCurrentMomentForTimezone} from 'utils/timezone';\n\nimport type {PropsFromRedux} from './index';\nimport './post_reminder_custom_time_picker_modal.scss';\n\ntype Props = PropsFromRedux & {\n    onExited: () => void;\n    postId: string;\n    actions: {\n        addPostReminder: (postId: string, userId: string, timestamp: number) => void;\n    };\n};\n\nfunction PostReminderCustomTimePicker({userId, timezone, onExited, postId, actions}: Props) {\n    const currentTime = getCurrentMomentForTimezone(timezone);\n    const initialReminderTime = getRoundedTime(currentTime);\n\n    const [customReminderTime, setCustomReminderTime] = useState(initialReminderTime);\n\n    const handleConfirm = useCallback(() => {\n        actions.addPostReminder(userId, postId, toUTCUnix(customReminderTime.toDate()));\n    }, [customReminderTime]);\n\n    const [isDatePickerOpen, setIsDatePickerOpen] = useState(false);\n\n    const {formatMessage} = useIntl();\n\n    useEffect(() => {\n        function handleKeyDown(event: KeyboardEvent) {\n            if (isKeyPressed(event, Constants.KeyCodes.ESCAPE) && !isDatePickerOpen) {\n                onExited();\n            }\n        }\n\n        document.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [isDatePickerOpen]);\n\n    return (\n        <GenericModal\n            id='PostReminderCustomTimePickerModal'\n            ariaLabel={formatMessage({id: 'post_reminder_custom_time_picker_modal.defaultMsg', defaultMessage: 'Set a reminder'})}\n            onExited={onExited}\n            modalHeaderText={(\n                <FormattedMessage\n                    id='post_reminder.custom_time_picker_modal.header'\n                    defaultMessage='Set a reminder'\n                />\n            )}\n            confirmButtonText={(\n                <FormattedMessage\n                    id='post_reminder.custom_time_picker_modal.submit_button'\n                    defaultMessage='Set reminder'\n                />\n            )}\n            handleConfirm={handleConfirm}\n            handleEnterKeyPress={handleConfirm}\n            className={'post-reminder-modal'}\n            compassDesign={true}\n            keyboardEscape={false}\n        >\n            <DateTimeInput\n                time={customReminderTime}\n                handleChange={setCustomReminderTime}\n                timezone={timezone}\n                setIsDatePickerOpen={setIsDatePickerOpen}\n            />\n        </GenericModal>\n    );\n}\n\nexport default PostReminderCustomTimePicker;\n"],"names":["PostReminderCustomTimePicker","_ref","userId","timezone","onExited","postId","actions","currentTime","getCurrentMomentForTimezone","initialReminderTime","getRoundedTime","customReminderTime","setCustomReminderTime","useState","handleConfirm","useCallback","addPostReminder","toUTCUnix","toDate","isDatePickerOpen","setIsDatePickerOpen","formatMessage","useIntl","useEffect","handleKeyDown","event","isKeyPressed","Constants","document","addEventListener","removeEventListener","React","GenericModal","id","ariaLabel","defaultMessage","modalHeaderText","FormattedMessage","confirmButtonText","handleEnterKeyPress","className","compassDesign","keyboardEscape","DateTimeInput","time","handleChange","propTypes","_pt","isRequired"],"sourceRoot":""}